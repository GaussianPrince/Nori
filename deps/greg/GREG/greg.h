/* GREG - an OpenGL extension loader generator
 * Copyright Â© Camilla Berglund <dreda@dreda.org>
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would
 *    be appreciated but is not required.
 *
 * 2. Altered source versions must be plainly marked as such, and must not
 *    be misrepresented as being the original software.
 *
 * 3. This notice may not be removed or altered from any source
 *    distribution.
 */

/* Parts of this file are reproduced from the OpenGL XML specification.
 * Copyright (c) 2013 The Khronos Group Inc.
 */

#ifndef _greg_h_
#define _greg_h_

/* GREG replaces gl.h and glext.h */
#define __gl_h_
#define __GL_H__
#define __glext_h_
#define __GLEXT_H__
#define __gltypes_h_

/* Standardize on _WIN32 as the Windows macro */
#if !defined(_WIN32) && (defined(__WIN32__) || defined(WIN32))
  #define _WIN32
#endif /* _WIN32 */

/* Define GLAPIENTRY if not already defined */
#if !defined(GLAPIENTRY)
  #if defined(_WIN32)
    #define GLAPIENTRY __stdcall
  #else
    #define GLAPIENTRY
  #endif
#endif /* GLAPIENTRY */

#ifdef __cplusplus
extern "C" {
#endif

/* Client API feature and extension macros */
#define GL_VERSION_1_0 1
#define GL_VERSION_1_1 1
#define GL_VERSION_1_2 1
#define GL_VERSION_1_3 1
#define GL_VERSION_1_4 1
#define GL_VERSION_1_5 1
#define GL_VERSION_2_0 1
#define GL_VERSION_2_1 1
#define GL_VERSION_3_0 1
#define GL_VERSION_3_1 1
#define GL_VERSION_3_2 1

#define GL_ARB_debug_output 1
#define GL_ARB_half_float_pixel 1
#define GL_ARB_texture_float 1
#define GL_EXT_texture_filter_anisotropic 1


/* Client API feature and extension booleans */
extern int GREG_VERSION_1_0;
extern int GREG_VERSION_1_1;
extern int GREG_VERSION_1_2;
extern int GREG_VERSION_1_3;
extern int GREG_VERSION_1_4;
extern int GREG_VERSION_1_5;
extern int GREG_VERSION_2_0;
extern int GREG_VERSION_2_1;
extern int GREG_VERSION_3_0;
extern int GREG_VERSION_3_1;
extern int GREG_VERSION_3_2;

extern int GREG_ARB_debug_output;
extern int GREG_ARB_half_float_pixel;
extern int GREG_ARB_texture_float;
extern int GREG_EXT_texture_filter_anisotropic;


/* Client API types */
#include <stddef.h>
#ifndef GLEXT_64_TYPES_DEFINED
/* This code block is duplicated in glxext.h, so must be protected */
#define GLEXT_64_TYPES_DEFINED
/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
/* (as used in the GL_EXT_timer_query extension). */
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
#elif defined(__sun__) || defined(__digital__)
#include <inttypes.h>
#if defined(__STDC__)
#if defined(__arch64__) || defined(_LP64)
typedef long int int64_t;
typedef unsigned long int uint64_t;
#else
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#endif /* __arch64__ */
#endif /* __STDC__ */
#elif defined( __VMS ) || defined(__sgi)
#include <inttypes.h>
#elif defined(__SCO__) || defined(__USLC__)
#include <stdint.h>
#elif defined(__UNIXOS2__) || defined(__SOL64__)
typedef long int int32_t;
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#elif defined(_WIN32) && defined(__GNUC__)
#include <stdint.h>
#elif defined(_WIN32)
typedef __int32 int32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
/* Fallback if nothing above works */
#include <inttypes.h>
#endif
#endif
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef int GLsizei;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef char GLchar;
typedef unsigned short GLhalfARB;
typedef unsigned short GLhalf;
typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef struct __GLsync *GLsync;
typedef void (GLAPIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);


/* Client API enumeration values */
#define GL_CURRENT_BIT 0x00000001
#define GL_POINT_BIT 0x00000002
#define GL_LINE_BIT 0x00000004
#define GL_POLYGON_BIT 0x00000008
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#define GL_PIXEL_MODE_BIT 0x00000020
#define GL_LIGHTING_BIT 0x00000040
#define GL_FOG_BIT 0x00000080
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_ACCUM_BUFFER_BIT 0x00000200
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_VIEWPORT_BIT 0x00000800
#define GL_TRANSFORM_BIT 0x00001000
#define GL_ENABLE_BIT 0x00002000
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_HINT_BIT 0x00008000
#define GL_EVAL_BIT 0x00010000
#define GL_LIST_BIT 0x00020000
#define GL_TEXTURE_BIT 0x00040000
#define GL_SCISSOR_BIT 0x00080000
#define GL_MULTISAMPLE_BIT 0x20000000
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_FALSE 0
#define GL_NO_ERROR 0
#define GL_ZERO 0
#define GL_NONE 0
#define GL_TRUE 1
#define GL_ONE 1
#define GL_INVALID_INDEX 0xFFFFFFFF
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#define GL_POINTS 0x0000
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_FAN 0x0006
#define GL_QUADS 0x0007
#define GL_QUAD_STRIP 0x0008
#define GL_POLYGON 0x0009
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_ACCUM 0x0100
#define GL_LOAD 0x0101
#define GL_RETURN 0x0102
#define GL_MULT 0x0103
#define GL_ADD 0x0104
#define GL_NEVER 0x0200
#define GL_LESS 0x0201
#define GL_EQUAL 0x0202
#define GL_LEQUAL 0x0203
#define GL_GREATER 0x0204
#define GL_NOTEQUAL 0x0205
#define GL_GEQUAL 0x0206
#define GL_ALWAYS 0x0207
#define GL_SRC_COLOR 0x0300
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_SRC_ALPHA 0x0302
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_DST_ALPHA 0x0304
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_DST_COLOR 0x0306
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_FRONT 0x0404
#define GL_BACK 0x0405
#define GL_LEFT 0x0406
#define GL_RIGHT 0x0407
#define GL_FRONT_AND_BACK 0x0408
#define GL_AUX0 0x0409
#define GL_AUX1 0x040A
#define GL_AUX2 0x040B
#define GL_AUX3 0x040C
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_VALUE 0x0501
#define GL_INVALID_OPERATION 0x0502
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_OUT_OF_MEMORY 0x0505
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_2D 0x0600
#define GL_3D 0x0601
#define GL_3D_COLOR 0x0602
#define GL_3D_COLOR_TEXTURE 0x0603
#define GL_4D_COLOR_TEXTURE 0x0604
#define GL_PASS_THROUGH_TOKEN 0x0700
#define GL_POINT_TOKEN 0x0701
#define GL_LINE_TOKEN 0x0702
#define GL_POLYGON_TOKEN 0x0703
#define GL_BITMAP_TOKEN 0x0704
#define GL_DRAW_PIXEL_TOKEN 0x0705
#define GL_COPY_PIXEL_TOKEN 0x0706
#define GL_LINE_RESET_TOKEN 0x0707
#define GL_EXP 0x0800
#define GL_EXP2 0x0801
#define GL_CW 0x0900
#define GL_CCW 0x0901
#define GL_COEFF 0x0A00
#define GL_ORDER 0x0A01
#define GL_DOMAIN 0x0A02
#define GL_CURRENT_COLOR 0x0B00
#define GL_CURRENT_INDEX 0x0B01
#define GL_CURRENT_NORMAL 0x0B02
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#define GL_CURRENT_RASTER_COLOR 0x0B04
#define GL_CURRENT_RASTER_INDEX 0x0B05
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#define GL_CURRENT_RASTER_POSITION 0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#define GL_POINT_SMOOTH 0x0B10
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_LINE_STIPPLE 0x0B24
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#define GL_LIST_MODE 0x0B30
#define GL_MAX_LIST_NESTING 0x0B31
#define GL_LIST_BASE 0x0B32
#define GL_LIST_INDEX 0x0B33
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_POLYGON_STIPPLE 0x0B42
#define GL_EDGE_FLAG 0x0B43
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_FRONT_FACE 0x0B46
#define GL_LIGHTING 0x0B50
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#define GL_SHADE_MODEL 0x0B54
#define GL_COLOR_MATERIAL_FACE 0x0B55
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#define GL_COLOR_MATERIAL 0x0B57
#define GL_FOG 0x0B60
#define GL_FOG_INDEX 0x0B61
#define GL_FOG_DENSITY 0x0B62
#define GL_FOG_START 0x0B63
#define GL_FOG_END 0x0B64
#define GL_FOG_MODE 0x0B65
#define GL_FOG_COLOR 0x0B66
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_FUNC 0x0B74
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_MATRIX_MODE 0x0BA0
#define GL_NORMALIZE 0x0BA1
#define GL_VIEWPORT 0x0BA2
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#define GL_MODELVIEW_MATRIX 0x0BA6
#define GL_PROJECTION_MATRIX 0x0BA7
#define GL_TEXTURE_MATRIX 0x0BA8
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#define GL_ALPHA_TEST 0x0BC0
#define GL_ALPHA_TEST_FUNC 0x0BC1
#define GL_ALPHA_TEST_REF 0x0BC2
#define GL_DITHER 0x0BD0
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND 0x0BE2
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_INDEX_LOGIC_OP 0x0BF1
#define GL_LOGIC_OP 0x0BF1
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_AUX_BUFFERS 0x0C00
#define GL_DRAW_BUFFER 0x0C01
#define GL_READ_BUFFER 0x0C02
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_INDEX_CLEAR_VALUE 0x0C20
#define GL_INDEX_WRITEMASK 0x0C21
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_INDEX_MODE 0x0C30
#define GL_RGBA_MODE 0x0C31
#define GL_DOUBLEBUFFER 0x0C32
#define GL_STEREO 0x0C33
#define GL_RENDER_MODE 0x0C40
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#define GL_POINT_SMOOTH_HINT 0x0C51
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_FOG_HINT 0x0C54
#define GL_TEXTURE_GEN_S 0x0C60
#define GL_TEXTURE_GEN_T 0x0C61
#define GL_TEXTURE_GEN_R 0x0C62
#define GL_TEXTURE_GEN_Q 0x0C63
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_MAP_COLOR 0x0D10
#define GL_MAP_STENCIL 0x0D11
#define GL_INDEX_SHIFT 0x0D12
#define GL_INDEX_OFFSET 0x0D13
#define GL_RED_SCALE 0x0D14
#define GL_RED_BIAS 0x0D15
#define GL_ZOOM_X 0x0D16
#define GL_ZOOM_Y 0x0D17
#define GL_GREEN_SCALE 0x0D18
#define GL_GREEN_BIAS 0x0D19
#define GL_BLUE_SCALE 0x0D1A
#define GL_BLUE_BIAS 0x0D1B
#define GL_ALPHA_SCALE 0x0D1C
#define GL_ALPHA_BIAS 0x0D1D
#define GL_DEPTH_SCALE 0x0D1E
#define GL_DEPTH_BIAS 0x0D1F
#define GL_MAX_EVAL_ORDER 0x0D30
#define GL_MAX_LIGHTS 0x0D31
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_INDEX_BITS 0x0D51
#define GL_RED_BITS 0x0D52
#define GL_GREEN_BITS 0x0D53
#define GL_BLUE_BITS 0x0D54
#define GL_ALPHA_BITS 0x0D55
#define GL_DEPTH_BITS 0x0D56
#define GL_STENCIL_BITS 0x0D57
#define GL_ACCUM_RED_BITS 0x0D58
#define GL_ACCUM_GREEN_BITS 0x0D59
#define GL_ACCUM_BLUE_BITS 0x0D5A
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#define GL_NAME_STACK_DEPTH 0x0D70
#define GL_AUTO_NORMAL 0x0D80
#define GL_MAP1_COLOR_4 0x0D90
#define GL_MAP1_INDEX 0x0D91
#define GL_MAP1_NORMAL 0x0D92
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#define GL_MAP1_VERTEX_3 0x0D97
#define GL_MAP1_VERTEX_4 0x0D98
#define GL_MAP2_COLOR_4 0x0DB0
#define GL_MAP2_INDEX 0x0DB1
#define GL_MAP2_NORMAL 0x0DB2
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#define GL_MAP2_VERTEX_3 0x0DB7
#define GL_MAP2_VERTEX_4 0x0DB8
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_2D 0x0DE1
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_COMPONENTS 0x1003
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_BORDER 0x1005
#define GL_DONT_CARE 0x1100
#define GL_FASTEST 0x1101
#define GL_NICEST 0x1102
#define GL_AMBIENT 0x1200
#define GL_DIFFUSE 0x1201
#define GL_SPECULAR 0x1202
#define GL_POSITION 0x1203
#define GL_SPOT_DIRECTION 0x1204
#define GL_SPOT_EXPONENT 0x1205
#define GL_SPOT_CUTOFF 0x1206
#define GL_CONSTANT_ATTENUATION 0x1207
#define GL_LINEAR_ATTENUATION 0x1208
#define GL_QUADRATIC_ATTENUATION 0x1209
#define GL_COMPILE 0x1300
#define GL_COMPILE_AND_EXECUTE 0x1301
#define GL_BYTE 0x1400
#define GL_UNSIGNED_BYTE 0x1401
#define GL_SHORT 0x1402
#define GL_UNSIGNED_SHORT 0x1403
#define GL_INT 0x1404
#define GL_UNSIGNED_INT 0x1405
#define GL_FLOAT 0x1406
#define GL_2_BYTES 0x1407
#define GL_3_BYTES 0x1408
#define GL_4_BYTES 0x1409
#define GL_DOUBLE 0x140A
#define GL_HALF_FLOAT 0x140B
#define GL_HALF_FLOAT_ARB 0x140B
#define GL_CLEAR 0x1500
#define GL_AND 0x1501
#define GL_AND_REVERSE 0x1502
#define GL_COPY 0x1503
#define GL_AND_INVERTED 0x1504
#define GL_NOOP 0x1505
#define GL_XOR 0x1506
#define GL_OR 0x1507
#define GL_NOR 0x1508
#define GL_EQUIV 0x1509
#define GL_INVERT 0x150A
#define GL_OR_REVERSE 0x150B
#define GL_COPY_INVERTED 0x150C
#define GL_OR_INVERTED 0x150D
#define GL_NAND 0x150E
#define GL_SET 0x150F
#define GL_EMISSION 0x1600
#define GL_SHININESS 0x1601
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#define GL_COLOR_INDEXES 0x1603
#define GL_MODELVIEW 0x1700
#define GL_PROJECTION 0x1701
#define GL_TEXTURE 0x1702
#define GL_COLOR 0x1800
#define GL_DEPTH 0x1801
#define GL_STENCIL 0x1802
#define GL_COLOR_INDEX 0x1900
#define GL_STENCIL_INDEX 0x1901
#define GL_DEPTH_COMPONENT 0x1902
#define GL_RED 0x1903
#define GL_GREEN 0x1904
#define GL_BLUE 0x1905
#define GL_ALPHA 0x1906
#define GL_RGB 0x1907
#define GL_RGBA 0x1908
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_BITMAP 0x1A00
#define GL_POINT 0x1B00
#define GL_LINE 0x1B01
#define GL_FILL 0x1B02
#define GL_RENDER 0x1C00
#define GL_FEEDBACK 0x1C01
#define GL_SELECT 0x1C02
#define GL_FLAT 0x1D00
#define GL_SMOOTH 0x1D01
#define GL_KEEP 0x1E00
#define GL_REPLACE 0x1E01
#define GL_INCR 0x1E02
#define GL_DECR 0x1E03
#define GL_VENDOR 0x1F00
#define GL_RENDERER 0x1F01
#define GL_VERSION 0x1F02
#define GL_EXTENSIONS 0x1F03
#define GL_S 0x2000
#define GL_T 0x2001
#define GL_R 0x2002
#define GL_Q 0x2003
#define GL_MODULATE 0x2100
#define GL_DECAL 0x2101
#define GL_TEXTURE_ENV_MODE 0x2200
#define GL_TEXTURE_ENV_COLOR 0x2201
#define GL_TEXTURE_ENV 0x2300
#define GL_EYE_LINEAR 0x2400
#define GL_OBJECT_LINEAR 0x2401
#define GL_SPHERE_MAP 0x2402
#define GL_TEXTURE_GEN_MODE 0x2500
#define GL_OBJECT_PLANE 0x2501
#define GL_EYE_PLANE 0x2502
#define GL_NEAREST 0x2600
#define GL_LINEAR 0x2601
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_CLAMP 0x2900
#define GL_REPEAT 0x2901
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_R3_G3_B2 0x2A10
#define GL_V2F 0x2A20
#define GL_V3F 0x2A21
#define GL_C4UB_V2F 0x2A22
#define GL_C4UB_V3F 0x2A23
#define GL_C3F_V3F 0x2A24
#define GL_N3F_V3F 0x2A25
#define GL_C4F_N3F_V3F 0x2A26
#define GL_T2F_V3F 0x2A27
#define GL_T4F_V4F 0x2A28
#define GL_T2F_C4UB_V3F 0x2A29
#define GL_T2F_C3F_V3F 0x2A2A
#define GL_T2F_N3F_V3F 0x2A2B
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_LIGHT0 0x4000
#define GL_LIGHT1 0x4001
#define GL_LIGHT2 0x4002
#define GL_LIGHT3 0x4003
#define GL_LIGHT4 0x4004
#define GL_LIGHT5 0x4005
#define GL_LIGHT6 0x4006
#define GL_LIGHT7 0x4007
#define GL_CONSTANT_COLOR 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_CONSTANT_ALPHA 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_FUNC_ADD 0x8006
#define GL_MIN 0x8007
#define GL_MAX 0x8008
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_FUNC_SUBTRACT 0x800A
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_RESCALE_NORMAL 0x803A
#define GL_ALPHA4 0x803B
#define GL_ALPHA8 0x803C
#define GL_ALPHA12 0x803D
#define GL_ALPHA16 0x803E
#define GL_LUMINANCE4 0x803F
#define GL_LUMINANCE8 0x8040
#define GL_LUMINANCE12 0x8041
#define GL_LUMINANCE16 0x8042
#define GL_LUMINANCE4_ALPHA4 0x8043
#define GL_LUMINANCE6_ALPHA2 0x8044
#define GL_LUMINANCE8_ALPHA8 0x8045
#define GL_LUMINANCE12_ALPHA4 0x8046
#define GL_LUMINANCE12_ALPHA12 0x8047
#define GL_LUMINANCE16_ALPHA16 0x8048
#define GL_INTENSITY 0x8049
#define GL_INTENSITY4 0x804A
#define GL_INTENSITY8 0x804B
#define GL_INTENSITY12 0x804C
#define GL_INTENSITY16 0x804D
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB8 0x8051
#define GL_RGB10 0x8052
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGBA2 0x8055
#define GL_RGBA4 0x8056
#define GL_RGB5_A1 0x8057
#define GL_RGBA8 0x8058
#define GL_RGB10_A2 0x8059
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_TEXTURE_PRIORITY 0x8066
#define GL_TEXTURE_RESIDENT 0x8067
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_TEXTURE_3D 0x806F
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_VERTEX_ARRAY 0x8074
#define GL_NORMAL_ARRAY 0x8075
#define GL_COLOR_ARRAY 0x8076
#define GL_INDEX_ARRAY 0x8077
#define GL_TEXTURE_COORD_ARRAY 0x8078
#define GL_EDGE_FLAG_ARRAY 0x8079
#define GL_VERTEX_ARRAY_SIZE 0x807A
#define GL_VERTEX_ARRAY_TYPE 0x807B
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#define GL_NORMAL_ARRAY_TYPE 0x807E
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#define GL_COLOR_ARRAY_SIZE 0x8081
#define GL_COLOR_ARRAY_TYPE 0x8082
#define GL_COLOR_ARRAY_STRIDE 0x8083
#define GL_INDEX_ARRAY_TYPE 0x8085
#define GL_INDEX_ARRAY_STRIDE 0x8086
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#define GL_VERTEX_ARRAY_POINTER 0x808E
#define GL_NORMAL_ARRAY_POINTER 0x808F
#define GL_COLOR_ARRAY_POINTER 0x8090
#define GL_INDEX_ARRAY_POINTER 0x8091
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#define GL_MULTISAMPLE 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_POINT_SIZE_MIN 0x8126
#define GL_POINT_SIZE_MAX 0x8127
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_GENERATE_MIPMAP 0x8191
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#define GL_SINGLE_COLOR 0x81F9
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_MAJOR_VERSION 0x821B
#define GL_MINOR_VERSION 0x821C
#define GL_NUM_EXTENSIONS 0x821D
#define GL_CONTEXT_FLAGS 0x821E
#define GL_INDEX 0x8222
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RG 0x8226
#define GL_RG 0x8227
#define GL_RG_INTEGER 0x8228
#define GL_R8 0x8229
#define GL_R16 0x822A
#define GL_RG8 0x822B
#define GL_RG16 0x822C
#define GL_R16F 0x822D
#define GL_R32F 0x822E
#define GL_RG16F 0x822F
#define GL_RG32F 0x8230
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#define GL_DEBUG_SOURCE_API_ARB 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_MIRRORED_REPEAT 0x8370
#define GL_FOG_COORDINATE_SOURCE 0x8450
#define GL_FOG_COORD_SRC 0x8450
#define GL_FOG_COORDINATE 0x8451
#define GL_FOG_COORD 0x8451
#define GL_FRAGMENT_DEPTH 0x8452
#define GL_CURRENT_FOG_COORDINATE 0x8453
#define GL_CURRENT_FOG_COORD 0x8453
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#define GL_FOG_COORDINATE_ARRAY 0x8457
#define GL_FOG_COORD_ARRAY 0x8457
#define GL_COLOR_SUM 0x8458
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#define GL_MAX_TEXTURE_UNITS 0x84E2
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#define GL_SUBTRACT 0x84E7
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_COMPRESSED_ALPHA 0x84E9
#define GL_COMPRESSED_LUMINANCE 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#define GL_COMPRESSED_INTENSITY 0x84EC
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_DEPTH_STENCIL 0x84F9
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_INCR_WRAP 0x8507
#define GL_DECR_WRAP 0x8508
#define GL_NORMAL_MAP 0x8511
#define GL_REFLECTION_MAP 0x8512
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_COMBINE 0x8570
#define GL_COMBINE_RGB 0x8571
#define GL_COMBINE_ALPHA 0x8572
#define GL_RGB_SCALE 0x8573
#define GL_ADD_SIGNED 0x8574
#define GL_INTERPOLATE 0x8575
#define GL_CONSTANT 0x8576
#define GL_PRIMARY_COLOR 0x8577
#define GL_PREVIOUS 0x8578
#define GL_SOURCE0_RGB 0x8580
#define GL_SRC0_RGB 0x8580
#define GL_SOURCE1_RGB 0x8581
#define GL_SRC1_RGB 0x8581
#define GL_SOURCE2_RGB 0x8582
#define GL_SRC2_RGB 0x8582
#define GL_SOURCE0_ALPHA 0x8588
#define GL_SRC0_ALPHA 0x8588
#define GL_SOURCE1_ALPHA 0x8589
#define GL_SRC1_ALPHA 0x8589
#define GL_SOURCE2_ALPHA 0x858A
#define GL_SRC2_ALPHA 0x858A
#define GL_OPERAND0_RGB 0x8590
#define GL_OPERAND1_RGB 0x8591
#define GL_OPERAND2_RGB 0x8592
#define GL_OPERAND0_ALPHA 0x8598
#define GL_OPERAND1_ALPHA 0x8599
#define GL_OPERAND2_ALPHA 0x859A
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_DEPTH_CLAMP 0x864F
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_DOT3_RGB 0x86AE
#define GL_DOT3_RGBA 0x86AF
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_RGBA32F 0x8814
#define GL_RGBA32F_ARB 0x8814
#define GL_RGB32F 0x8815
#define GL_RGB32F_ARB 0x8815
#define GL_ALPHA32F_ARB 0x8816
#define GL_INTENSITY32F_ARB 0x8817
#define GL_LUMINANCE32F_ARB 0x8818
#define GL_LUMINANCE_ALPHA32F_ARB 0x8819
#define GL_RGBA16F 0x881A
#define GL_RGBA16F_ARB 0x881A
#define GL_RGB16F 0x881B
#define GL_RGB16F_ARB 0x881B
#define GL_ALPHA16F_ARB 0x881C
#define GL_INTENSITY16F_ARB 0x881D
#define GL_LUMINANCE16F_ARB 0x881E
#define GL_LUMINANCE_ALPHA16F_ARB 0x881F
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_DEPTH_TEXTURE_MODE 0x884B
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_POINT_SPRITE 0x8861
#define GL_COORD_REPLACE 0x8862
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_CURRENT_QUERY 0x8865
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_MAX_TEXTURE_COORDS 0x8871
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_ARRAY_BUFFER 0x8892
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_READ_ONLY 0x88B8
#define GL_WRITE_ONLY 0x88B9
#define GL_READ_WRITE 0x88BA
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_COPY 0x88E2
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_COPY 0x88E6
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_COPY 0x88EA
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_SAMPLES_PASSED 0x8914
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_CLAMP_VERTEX_COLOR 0x891A
#define GL_CLAMP_FRAGMENT_COLOR 0x891B
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_FIXED_ONLY 0x891D
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_VERTEX_SHADER 0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_SHADER_TYPE 0x8B4F
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT4 0x8B5C
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_DELETE_STATUS 0x8B80
#define GL_COMPILE_STATUS 0x8B81
#define GL_LINK_STATUS 0x8B82
#define GL_VALIDATE_STATUS 0x8B83
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_RED_TYPE_ARB 0x8C10
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
#define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
#define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_RGB9_E5 0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_SLUMINANCE_ALPHA 0x8C44
#define GL_SLUMINANCE8_ALPHA8 0x8C45
#define GL_SLUMINANCE 0x8C46
#define GL_SLUMINANCE8 0x8C47
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_COMPRESSED_SLUMINANCE 0x8C4A
#define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_LOWER_LEFT 0x8CA1
#define GL_UPPER_LEFT 0x8CA2
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_FRAMEBUFFER 0x8D40
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_INDEX16 0x8D49
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_MAX_SAMPLES 0x8D57
#define GL_RGBA32UI 0x8D70
#define GL_RGB32UI 0x8D71
#define GL_RGBA16UI 0x8D76
#define GL_RGB16UI 0x8D77
#define GL_RGBA8UI 0x8D7C
#define GL_RGB8UI 0x8D7D
#define GL_RGBA32I 0x8D82
#define GL_RGB32I 0x8D83
#define GL_RGBA16I 0x8D88
#define GL_RGB16I 0x8D89
#define GL_RGBA8I 0x8D8E
#define GL_RGB8I 0x8D8F
#define GL_RED_INTEGER 0x8D94
#define GL_GREEN_INTEGER 0x8D95
#define GL_BLUE_INTEGER 0x8D96
#define GL_ALPHA_INTEGER 0x8D97
#define GL_RGB_INTEGER 0x8D98
#define GL_RGBA_INTEGER 0x8D99
#define GL_BGR_INTEGER 0x8D9A
#define GL_BGRA_INTEGER 0x8D9B
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_R8_SNORM 0x8F94
#define GL_RG8_SNORM 0x8F95
#define GL_RGB8_SNORM 0x8F96
#define GL_RGBA8_SNORM 0x8F97
#define GL_R16_SNORM 0x8F98
#define GL_RG16_SNORM 0x8F99
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGBA16_SNORM 0x8F9B
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_OBJECT_TYPE 0x9112
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_UNSIGNALED 0x9118
#define GL_SIGNALED 0x9119
#define GL_ALREADY_SIGNALED 0x911A
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_CONDITION_SATISFIED 0x911C
#define GL_WAIT_FAILED 0x911D
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#define GL_DEBUG_SEVERITY_LOW_ARB 0x9148


/* Client API functions */
typedef void  (GLAPIENTRY *PFNGLACCUMPROC)(GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLACTIVETEXTUREPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLALPHAFUNCPROC)(GLenum, GLfloat);
typedef GLboolean (GLAPIENTRY *PFNGLARETEXTURESRESIDENTPROC)(GLsizei, const GLuint *, GLboolean *);
typedef void  (GLAPIENTRY *PFNGLARRAYELEMENTPROC)(GLint);
typedef void  (GLAPIENTRY *PFNGLATTACHSHADERPROC)(GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLBEGINPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLBEGINCONDITIONALRENDERPROC)(GLuint, GLenum);
typedef void  (GLAPIENTRY *PFNGLBEGINQUERYPROC)(GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLBINDATTRIBLOCATIONPROC)(GLuint, GLuint, const GLchar *);
typedef void  (GLAPIENTRY *PFNGLBINDBUFFERPROC)(GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLBINDBUFFERBASEPROC)(GLenum, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLBINDBUFFERRANGEPROC)(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
typedef void  (GLAPIENTRY *PFNGLBINDFRAGDATALOCATIONPROC)(GLuint, GLuint, const GLchar *);
typedef void  (GLAPIENTRY *PFNGLBINDFRAMEBUFFERPROC)(GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLBINDRENDERBUFFERPROC)(GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLBINDTEXTUREPROC)(GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLBINDVERTEXARRAYPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLBITMAPPROC)(GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, const GLubyte *);
typedef void  (GLAPIENTRY *PFNGLBLENDCOLORPROC)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLBLENDEQUATIONPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum, GLenum);
typedef void  (GLAPIENTRY *PFNGLBLENDFUNCPROC)(GLenum, GLenum);
typedef void  (GLAPIENTRY *PFNGLBLENDFUNCSEPARATEPROC)(GLenum, GLenum, GLenum, GLenum);
typedef void  (GLAPIENTRY *PFNGLBLITFRAMEBUFFERPROC)(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
typedef void  (GLAPIENTRY *PFNGLBUFFERDATAPROC)(GLenum, GLsizeiptr, const void *, GLenum);
typedef void  (GLAPIENTRY *PFNGLBUFFERSUBDATAPROC)(GLenum, GLintptr, GLsizeiptr, const void *);
typedef void  (GLAPIENTRY *PFNGLCALLLISTPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLCALLLISTSPROC)(GLsizei, GLenum, const void *);
typedef GLenum (GLAPIENTRY *PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLCLAMPCOLORPROC)(GLenum, GLenum);
typedef void  (GLAPIENTRY *PFNGLCLEARPROC)(GLbitfield);
typedef void  (GLAPIENTRY *PFNGLCLEARACCUMPROC)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLCLEARBUFFERFIPROC)(GLenum, GLint, GLfloat, GLint);
typedef void  (GLAPIENTRY *PFNGLCLEARBUFFERFVPROC)(GLenum, GLint, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLCLEARBUFFERIVPROC)(GLenum, GLint, const GLint *);
typedef void  (GLAPIENTRY *PFNGLCLEARBUFFERUIVPROC)(GLenum, GLint, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLCLEARCOLORPROC)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLCLEARDEPTHPROC)(GLdouble);
typedef void  (GLAPIENTRY *PFNGLCLEARINDEXPROC)(GLfloat);
typedef void  (GLAPIENTRY *PFNGLCLEARSTENCILPROC)(GLint);
typedef void  (GLAPIENTRY *PFNGLCLIENTACTIVETEXTUREPROC)(GLenum);
typedef GLenum (GLAPIENTRY *PFNGLCLIENTWAITSYNCPROC)(GLsync, GLbitfield, GLuint64);
typedef void  (GLAPIENTRY *PFNGLCLIPPLANEPROC)(GLenum, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLCOLOR3BPROC)(GLbyte, GLbyte, GLbyte);
typedef void  (GLAPIENTRY *PFNGLCOLOR3BVPROC)(const GLbyte *);
typedef void  (GLAPIENTRY *PFNGLCOLOR3DPROC)(GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLCOLOR3DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLCOLOR3FPROC)(GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLCOLOR3FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLCOLOR3IPROC)(GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLCOLOR3IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLCOLOR3SPROC)(GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLCOLOR3SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLCOLOR3UBPROC)(GLubyte, GLubyte, GLubyte);
typedef void  (GLAPIENTRY *PFNGLCOLOR3UBVPROC)(const GLubyte *);
typedef void  (GLAPIENTRY *PFNGLCOLOR3UIPROC)(GLuint, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLCOLOR3UIVPROC)(const GLuint *);
typedef void  (GLAPIENTRY *PFNGLCOLOR3USPROC)(GLushort, GLushort, GLushort);
typedef void  (GLAPIENTRY *PFNGLCOLOR3USVPROC)(const GLushort *);
typedef void  (GLAPIENTRY *PFNGLCOLOR4BPROC)(GLbyte, GLbyte, GLbyte, GLbyte);
typedef void  (GLAPIENTRY *PFNGLCOLOR4BVPROC)(const GLbyte *);
typedef void  (GLAPIENTRY *PFNGLCOLOR4DPROC)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLCOLOR4DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLCOLOR4FPROC)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLCOLOR4FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLCOLOR4IPROC)(GLint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLCOLOR4IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLCOLOR4SPROC)(GLshort, GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLCOLOR4SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLCOLOR4UBPROC)(GLubyte, GLubyte, GLubyte, GLubyte);
typedef void  (GLAPIENTRY *PFNGLCOLOR4UBVPROC)(const GLubyte *);
typedef void  (GLAPIENTRY *PFNGLCOLOR4UIPROC)(GLuint, GLuint, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLCOLOR4UIVPROC)(const GLuint *);
typedef void  (GLAPIENTRY *PFNGLCOLOR4USPROC)(GLushort, GLushort, GLushort, GLushort);
typedef void  (GLAPIENTRY *PFNGLCOLOR4USVPROC)(const GLushort *);
typedef void  (GLAPIENTRY *PFNGLCOLORMASKPROC)(GLboolean, GLboolean, GLboolean, GLboolean);
typedef void  (GLAPIENTRY *PFNGLCOLORMASKIPROC)(GLuint, GLboolean, GLboolean, GLboolean, GLboolean);
typedef void  (GLAPIENTRY *PFNGLCOLORMATERIALPROC)(GLenum, GLenum);
typedef void  (GLAPIENTRY *PFNGLCOLORPOINTERPROC)(GLint, GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLCOMPILESHADERPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLCOPYBUFFERSUBDATAPROC)(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr);
typedef void  (GLAPIENTRY *PFNGLCOPYPIXELSPROC)(GLint, GLint, GLsizei, GLsizei, GLenum);
typedef void  (GLAPIENTRY *PFNGLCOPYTEXIMAGE1DPROC)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
typedef void  (GLAPIENTRY *PFNGLCOPYTEXIMAGE2DPROC)(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
typedef void  (GLAPIENTRY *PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum, GLint, GLint, GLint, GLint, GLsizei);
typedef void  (GLAPIENTRY *PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void  (GLAPIENTRY *PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef GLuint (GLAPIENTRY *PFNGLCREATEPROGRAMPROC)(void);
typedef GLuint (GLAPIENTRY *PFNGLCREATESHADERPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLCULLFACEPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLDEBUGMESSAGECALLBACKARBPROC)(GLDEBUGPROCARB, const void *);
typedef void  (GLAPIENTRY *PFNGLDEBUGMESSAGECONTROLARBPROC)(GLenum, GLenum, GLenum, GLsizei, const GLuint *, GLboolean);
typedef void  (GLAPIENTRY *PFNGLDEBUGMESSAGEINSERTARBPROC)(GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar *);
typedef void  (GLAPIENTRY *PFNGLDELETEBUFFERSPROC)(GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLDELETELISTSPROC)(GLuint, GLsizei);
typedef void  (GLAPIENTRY *PFNGLDELETEPROGRAMPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLDELETEQUERIESPROC)(GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLDELETERENDERBUFFERSPROC)(GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLDELETESHADERPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLDELETESYNCPROC)(GLsync);
typedef void  (GLAPIENTRY *PFNGLDELETETEXTURESPROC)(GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLDELETEVERTEXARRAYSPROC)(GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLDEPTHFUNCPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLDEPTHMASKPROC)(GLboolean);
typedef void  (GLAPIENTRY *PFNGLDEPTHRANGEPROC)(GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLDETACHSHADERPROC)(GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLDISABLEPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLDISABLECLIENTSTATEPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLDISABLEIPROC)(GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLDRAWARRAYSPROC)(GLenum, GLint, GLsizei);
typedef void  (GLAPIENTRY *PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum, GLint, GLsizei, GLsizei);
typedef void  (GLAPIENTRY *PFNGLDRAWBUFFERPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLDRAWBUFFERSPROC)(GLsizei, const GLenum *);
typedef void  (GLAPIENTRY *PFNGLDRAWELEMENTSPROC)(GLenum, GLsizei, GLenum, const void *);
typedef void  (GLAPIENTRY *PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum, GLsizei, GLenum, const void *, GLint);
typedef void  (GLAPIENTRY *PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum, GLsizei, GLenum, const void *, GLsizei);
typedef void  (GLAPIENTRY *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum, GLsizei, GLenum, const void *, GLsizei, GLint);
typedef void  (GLAPIENTRY *PFNGLDRAWPIXELSPROC)(GLsizei, GLsizei, GLenum, GLenum, const void *);
typedef void  (GLAPIENTRY *PFNGLDRAWRANGEELEMENTSPROC)(GLenum, GLuint, GLuint, GLsizei, GLenum, const void *);
typedef void  (GLAPIENTRY *PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum, GLuint, GLuint, GLsizei, GLenum, const void *, GLint);
typedef void  (GLAPIENTRY *PFNGLEDGEFLAGPROC)(GLboolean);
typedef void  (GLAPIENTRY *PFNGLEDGEFLAGPOINTERPROC)(GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLEDGEFLAGVPROC)(const GLboolean *);
typedef void  (GLAPIENTRY *PFNGLENABLEPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLENABLECLIENTSTATEPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLENABLEIPROC)(GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLENDPROC)(void);
typedef void  (GLAPIENTRY *PFNGLENDCONDITIONALRENDERPROC)(void);
typedef void  (GLAPIENTRY *PFNGLENDLISTPROC)(void);
typedef void  (GLAPIENTRY *PFNGLENDQUERYPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLENDTRANSFORMFEEDBACKPROC)(void);
typedef void  (GLAPIENTRY *PFNGLEVALCOORD1DPROC)(GLdouble);
typedef void  (GLAPIENTRY *PFNGLEVALCOORD1DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLEVALCOORD1FPROC)(GLfloat);
typedef void  (GLAPIENTRY *PFNGLEVALCOORD1FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLEVALCOORD2DPROC)(GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLEVALCOORD2DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLEVALCOORD2FPROC)(GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLEVALCOORD2FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLEVALMESH1PROC)(GLenum, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLEVALMESH2PROC)(GLenum, GLint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLEVALPOINT1PROC)(GLint);
typedef void  (GLAPIENTRY *PFNGLEVALPOINT2PROC)(GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLFEEDBACKBUFFERPROC)(GLsizei, GLenum, GLfloat *);
typedef GLsync (GLAPIENTRY *PFNGLFENCESYNCPROC)(GLenum, GLbitfield);
typedef void  (GLAPIENTRY *PFNGLFINISHPROC)(void);
typedef void  (GLAPIENTRY *PFNGLFLUSHPROC)(void);
typedef void  (GLAPIENTRY *PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum, GLintptr, GLsizeiptr);
typedef void  (GLAPIENTRY *PFNGLFOGCOORDPOINTERPROC)(GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLFOGCOORDDPROC)(GLdouble);
typedef void  (GLAPIENTRY *PFNGLFOGCOORDDVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLFOGCOORDFPROC)(GLfloat);
typedef void  (GLAPIENTRY *PFNGLFOGCOORDFVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLFOGFPROC)(GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLFOGFVPROC)(GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLFOGIPROC)(GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLFOGIVPROC)(GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum, GLenum, GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum, GLenum, GLuint, GLint);
typedef void  (GLAPIENTRY *PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum, GLenum, GLenum, GLuint, GLint);
typedef void  (GLAPIENTRY *PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum, GLenum, GLenum, GLuint, GLint);
typedef void  (GLAPIENTRY *PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum, GLenum, GLenum, GLuint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum, GLenum, GLuint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLFRONTFACEPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLFRUSTUMPROC)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLGENBUFFERSPROC)(GLsizei, GLuint *);
typedef void  (GLAPIENTRY *PFNGLGENFRAMEBUFFERSPROC)(GLsizei, GLuint *);
typedef GLuint (GLAPIENTRY *PFNGLGENLISTSPROC)(GLsizei);
typedef void  (GLAPIENTRY *PFNGLGENQUERIESPROC)(GLsizei, GLuint *);
typedef void  (GLAPIENTRY *PFNGLGENRENDERBUFFERSPROC)(GLsizei, GLuint *);
typedef void  (GLAPIENTRY *PFNGLGENTEXTURESPROC)(GLsizei, GLuint *);
typedef void  (GLAPIENTRY *PFNGLGENVERTEXARRAYSPROC)(GLsizei, GLuint *);
typedef void  (GLAPIENTRY *PFNGLGENERATEMIPMAPPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLGETACTIVEATTRIBPROC)(GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETACTIVEUNIFORMPROC)(GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint, GLuint, GLsizei, GLsizei *, GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint, GLuint, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint, GLuint, GLsizei, GLsizei *, GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint, GLsizei, const GLuint *, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETATTACHEDSHADERSPROC)(GLuint, GLsizei, GLsizei *, GLuint *);
typedef GLint (GLAPIENTRY *PFNGLGETATTRIBLOCATIONPROC)(GLuint, const GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETBOOLEANI_VPROC)(GLenum, GLuint, GLboolean *);
typedef void  (GLAPIENTRY *PFNGLGETBOOLEANVPROC)(GLenum, GLboolean *);
typedef void  (GLAPIENTRY *PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum, GLenum, GLint64 *);
typedef void  (GLAPIENTRY *PFNGLGETBUFFERPARAMETERIVPROC)(GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETBUFFERPOINTERVPROC)(GLenum, GLenum, void **);
typedef void  (GLAPIENTRY *PFNGLGETBUFFERSUBDATAPROC)(GLenum, GLintptr, GLsizeiptr, void *);
typedef void  (GLAPIENTRY *PFNGLGETCLIPPLANEPROC)(GLenum, GLdouble *);
typedef void  (GLAPIENTRY *PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum, GLint, void *);
typedef GLuint (GLAPIENTRY *PFNGLGETDEBUGMESSAGELOGARBPROC)(GLuint, GLsizei, GLenum *, GLenum *, GLuint *, GLenum *, GLsizei *, GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETDOUBLEVPROC)(GLenum, GLdouble *);
typedef GLenum (GLAPIENTRY *PFNGLGETERRORPROC)(void);
typedef void  (GLAPIENTRY *PFNGLGETFLOATVPROC)(GLenum, GLfloat *);
typedef GLint (GLAPIENTRY *PFNGLGETFRAGDATALOCATIONPROC)(GLuint, const GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum, GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETINTEGER64I_VPROC)(GLenum, GLuint, GLint64 *);
typedef void  (GLAPIENTRY *PFNGLGETINTEGER64VPROC)(GLenum, GLint64 *);
typedef void  (GLAPIENTRY *PFNGLGETINTEGERI_VPROC)(GLenum, GLuint, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETINTEGERVPROC)(GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETLIGHTFVPROC)(GLenum, GLenum, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETLIGHTIVPROC)(GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETMAPDVPROC)(GLenum, GLenum, GLdouble *);
typedef void  (GLAPIENTRY *PFNGLGETMAPFVPROC)(GLenum, GLenum, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETMAPIVPROC)(GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETMATERIALFVPROC)(GLenum, GLenum, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETMATERIALIVPROC)(GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETMULTISAMPLEFVPROC)(GLenum, GLuint, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETPIXELMAPFVPROC)(GLenum, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETPIXELMAPUIVPROC)(GLenum, GLuint *);
typedef void  (GLAPIENTRY *PFNGLGETPIXELMAPUSVPROC)(GLenum, GLushort *);
typedef void  (GLAPIENTRY *PFNGLGETPOINTERVPROC)(GLenum, void **);
typedef void  (GLAPIENTRY *PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte *);
typedef void  (GLAPIENTRY *PFNGLGETPROGRAMINFOLOGPROC)(GLuint, GLsizei, GLsizei *, GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETPROGRAMIVPROC)(GLuint, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETQUERYOBJECTIVPROC)(GLuint, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETQUERYOBJECTUIVPROC)(GLuint, GLenum, GLuint *);
typedef void  (GLAPIENTRY *PFNGLGETQUERYIVPROC)(GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETSHADERINFOLOGPROC)(GLuint, GLsizei, GLsizei *, GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETSHADERSOURCEPROC)(GLuint, GLsizei, GLsizei *, GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETSHADERIVPROC)(GLuint, GLenum, GLint *);
typedef const GLubyte * (GLAPIENTRY *PFNGLGETSTRINGPROC)(GLenum);
typedef const GLubyte * (GLAPIENTRY *PFNGLGETSTRINGIPROC)(GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLGETSYNCIVPROC)(GLsync, GLenum, GLsizei, GLsizei *, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETTEXENVFVPROC)(GLenum, GLenum, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETTEXENVIVPROC)(GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETTEXGENDVPROC)(GLenum, GLenum, GLdouble *);
typedef void  (GLAPIENTRY *PFNGLGETTEXGENFVPROC)(GLenum, GLenum, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETTEXGENIVPROC)(GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETTEXIMAGEPROC)(GLenum, GLint, GLenum, GLenum, void *);
typedef void  (GLAPIENTRY *PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum, GLint, GLenum, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum, GLint, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETTEXPARAMETERIIVPROC)(GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETTEXPARAMETERIUIVPROC)(GLenum, GLenum, GLuint *);
typedef void  (GLAPIENTRY *PFNGLGETTEXPARAMETERFVPROC)(GLenum, GLenum, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETTEXPARAMETERIVPROC)(GLenum, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint, GLuint, GLsizei, GLsizei *, GLsizei *, GLenum *, GLchar *);
typedef GLuint (GLAPIENTRY *PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint, const GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETUNIFORMINDICESPROC)(GLuint, GLsizei, const GLchar *const*, GLuint *);
typedef GLint (GLAPIENTRY *PFNGLGETUNIFORMLOCATIONPROC)(GLuint, const GLchar *);
typedef void  (GLAPIENTRY *PFNGLGETUNIFORMFVPROC)(GLuint, GLint, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETUNIFORMIVPROC)(GLuint, GLint, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETUNIFORMUIVPROC)(GLuint, GLint, GLuint *);
typedef void  (GLAPIENTRY *PFNGLGETVERTEXATTRIBIIVPROC)(GLuint, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint, GLenum, GLuint *);
typedef void  (GLAPIENTRY *PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint, GLenum, void **);
typedef void  (GLAPIENTRY *PFNGLGETVERTEXATTRIBDVPROC)(GLuint, GLenum, GLdouble *);
typedef void  (GLAPIENTRY *PFNGLGETVERTEXATTRIBFVPROC)(GLuint, GLenum, GLfloat *);
typedef void  (GLAPIENTRY *PFNGLGETVERTEXATTRIBIVPROC)(GLuint, GLenum, GLint *);
typedef void  (GLAPIENTRY *PFNGLHINTPROC)(GLenum, GLenum);
typedef void  (GLAPIENTRY *PFNGLINDEXMASKPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLINDEXPOINTERPROC)(GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLINDEXDPROC)(GLdouble);
typedef void  (GLAPIENTRY *PFNGLINDEXDVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLINDEXFPROC)(GLfloat);
typedef void  (GLAPIENTRY *PFNGLINDEXFVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLINDEXIPROC)(GLint);
typedef void  (GLAPIENTRY *PFNGLINDEXIVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLINDEXSPROC)(GLshort);
typedef void  (GLAPIENTRY *PFNGLINDEXSVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLINDEXUBPROC)(GLubyte);
typedef void  (GLAPIENTRY *PFNGLINDEXUBVPROC)(const GLubyte *);
typedef void  (GLAPIENTRY *PFNGLINITNAMESPROC)(void);
typedef void  (GLAPIENTRY *PFNGLINTERLEAVEDARRAYSPROC)(GLenum, GLsizei, const void *);
typedef GLboolean (GLAPIENTRY *PFNGLISBUFFERPROC)(GLuint);
typedef GLboolean (GLAPIENTRY *PFNGLISENABLEDPROC)(GLenum);
typedef GLboolean (GLAPIENTRY *PFNGLISENABLEDIPROC)(GLenum, GLuint);
typedef GLboolean (GLAPIENTRY *PFNGLISFRAMEBUFFERPROC)(GLuint);
typedef GLboolean (GLAPIENTRY *PFNGLISLISTPROC)(GLuint);
typedef GLboolean (GLAPIENTRY *PFNGLISPROGRAMPROC)(GLuint);
typedef GLboolean (GLAPIENTRY *PFNGLISQUERYPROC)(GLuint);
typedef GLboolean (GLAPIENTRY *PFNGLISRENDERBUFFERPROC)(GLuint);
typedef GLboolean (GLAPIENTRY *PFNGLISSHADERPROC)(GLuint);
typedef GLboolean (GLAPIENTRY *PFNGLISSYNCPROC)(GLsync);
typedef GLboolean (GLAPIENTRY *PFNGLISTEXTUREPROC)(GLuint);
typedef GLboolean (GLAPIENTRY *PFNGLISVERTEXARRAYPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLLIGHTMODELFPROC)(GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLLIGHTMODELFVPROC)(GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLLIGHTMODELIPROC)(GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLLIGHTMODELIVPROC)(GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLLIGHTFPROC)(GLenum, GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLLIGHTFVPROC)(GLenum, GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLLIGHTIPROC)(GLenum, GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLLIGHTIVPROC)(GLenum, GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLLINESTIPPLEPROC)(GLint, GLushort);
typedef void  (GLAPIENTRY *PFNGLLINEWIDTHPROC)(GLfloat);
typedef void  (GLAPIENTRY *PFNGLLINKPROGRAMPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLLISTBASEPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLLOADIDENTITYPROC)(void);
typedef void  (GLAPIENTRY *PFNGLLOADMATRIXDPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLLOADMATRIXFPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLLOADNAMEPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLLOADTRANSPOSEMATRIXDPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLLOADTRANSPOSEMATRIXFPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLLOGICOPPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLMAP1DPROC)(GLenum, GLdouble, GLdouble, GLint, GLint, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLMAP1FPROC)(GLenum, GLfloat, GLfloat, GLint, GLint, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLMAP2DPROC)(GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLMAP2FPROC)(GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat *);
typedef void * (GLAPIENTRY *PFNGLMAPBUFFERPROC)(GLenum, GLenum);
typedef void * (GLAPIENTRY *PFNGLMAPBUFFERRANGEPROC)(GLenum, GLintptr, GLsizeiptr, GLbitfield);
typedef void  (GLAPIENTRY *PFNGLMAPGRID1DPROC)(GLint, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLMAPGRID1FPROC)(GLint, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLMAPGRID2DPROC)(GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLMAPGRID2FPROC)(GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLMATERIALFPROC)(GLenum, GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLMATERIALFVPROC)(GLenum, GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLMATERIALIPROC)(GLenum, GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLMATERIALIVPROC)(GLenum, GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLMATRIXMODEPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLMULTMATRIXDPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLMULTMATRIXFPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLMULTTRANSPOSEMATRIXDPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLMULTTRANSPOSEMATRIXFPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLMULTIDRAWARRAYSPROC)(GLenum, const GLint *, const GLsizei *, GLsizei);
typedef void  (GLAPIENTRY *PFNGLMULTIDRAWELEMENTSPROC)(GLenum, const GLsizei *, GLenum, const void *const*, GLsizei);
typedef void  (GLAPIENTRY *PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum, const GLsizei *, GLenum, const void *const*, GLsizei, const GLint *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD1DPROC)(GLenum, GLdouble);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD1DVPROC)(GLenum, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD1FPROC)(GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD1FVPROC)(GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD1IPROC)(GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD1IVPROC)(GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD1SPROC)(GLenum, GLshort);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD1SVPROC)(GLenum, const GLshort *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD2DPROC)(GLenum, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD2DVPROC)(GLenum, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD2FPROC)(GLenum, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD2FVPROC)(GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD2IPROC)(GLenum, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD2IVPROC)(GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD2SPROC)(GLenum, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD2SVPROC)(GLenum, const GLshort *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD3DPROC)(GLenum, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD3DVPROC)(GLenum, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD3FPROC)(GLenum, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD3FVPROC)(GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD3IPROC)(GLenum, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD3IVPROC)(GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD3SPROC)(GLenum, GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD3SVPROC)(GLenum, const GLshort *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD4DPROC)(GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD4DVPROC)(GLenum, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD4FPROC)(GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD4FVPROC)(GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD4IPROC)(GLenum, GLint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD4IVPROC)(GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD4SPROC)(GLenum, GLshort, GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLMULTITEXCOORD4SVPROC)(GLenum, const GLshort *);
typedef void  (GLAPIENTRY *PFNGLNEWLISTPROC)(GLuint, GLenum);
typedef void  (GLAPIENTRY *PFNGLNORMAL3BPROC)(GLbyte, GLbyte, GLbyte);
typedef void  (GLAPIENTRY *PFNGLNORMAL3BVPROC)(const GLbyte *);
typedef void  (GLAPIENTRY *PFNGLNORMAL3DPROC)(GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLNORMAL3DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLNORMAL3FPROC)(GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLNORMAL3FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLNORMAL3IPROC)(GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLNORMAL3IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLNORMAL3SPROC)(GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLNORMAL3SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLNORMALPOINTERPROC)(GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLORTHOPROC)(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLPASSTHROUGHPROC)(GLfloat);
typedef void  (GLAPIENTRY *PFNGLPIXELMAPFVPROC)(GLenum, GLsizei, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLPIXELMAPUIVPROC)(GLenum, GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLPIXELMAPUSVPROC)(GLenum, GLsizei, const GLushort *);
typedef void  (GLAPIENTRY *PFNGLPIXELSTOREFPROC)(GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLPIXELSTOREIPROC)(GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLPIXELTRANSFERFPROC)(GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLPIXELTRANSFERIPROC)(GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLPIXELZOOMPROC)(GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLPOINTPARAMETERFPROC)(GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLPOINTPARAMETERFVPROC)(GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLPOINTPARAMETERIPROC)(GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLPOINTPARAMETERIVPROC)(GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLPOINTSIZEPROC)(GLfloat);
typedef void  (GLAPIENTRY *PFNGLPOLYGONMODEPROC)(GLenum, GLenum);
typedef void  (GLAPIENTRY *PFNGLPOLYGONOFFSETPROC)(GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLPOLYGONSTIPPLEPROC)(const GLubyte *);
typedef void  (GLAPIENTRY *PFNGLPOPATTRIBPROC)(void);
typedef void  (GLAPIENTRY *PFNGLPOPCLIENTATTRIBPROC)(void);
typedef void  (GLAPIENTRY *PFNGLPOPMATRIXPROC)(void);
typedef void  (GLAPIENTRY *PFNGLPOPNAMEPROC)(void);
typedef void  (GLAPIENTRY *PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLPRIORITIZETEXTURESPROC)(GLsizei, const GLuint *, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLPROVOKINGVERTEXPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLPUSHATTRIBPROC)(GLbitfield);
typedef void  (GLAPIENTRY *PFNGLPUSHCLIENTATTRIBPROC)(GLbitfield);
typedef void  (GLAPIENTRY *PFNGLPUSHMATRIXPROC)(void);
typedef void  (GLAPIENTRY *PFNGLPUSHNAMEPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS2DPROC)(GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS2DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS2FPROC)(GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS2FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS2IPROC)(GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS2IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS2SPROC)(GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS2SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS3DPROC)(GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS3DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS3FPROC)(GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS3FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS3IPROC)(GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS3IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS3SPROC)(GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS3SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS4DPROC)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS4DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS4FPROC)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS4FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS4IPROC)(GLint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS4IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS4SPROC)(GLshort, GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLRASTERPOS4SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLREADBUFFERPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLREADPIXELSPROC)(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void *);
typedef void  (GLAPIENTRY *PFNGLRECTDPROC)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLRECTDVPROC)(const GLdouble *, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLRECTFPROC)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLRECTFVPROC)(const GLfloat *, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLRECTIPROC)(GLint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLRECTIVPROC)(const GLint *, const GLint *);
typedef void  (GLAPIENTRY *PFNGLRECTSPROC)(GLshort, GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLRECTSVPROC)(const GLshort *, const GLshort *);
typedef GLint (GLAPIENTRY *PFNGLRENDERMODEPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLRENDERBUFFERSTORAGEPROC)(GLenum, GLenum, GLsizei, GLsizei);
typedef void  (GLAPIENTRY *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
typedef void  (GLAPIENTRY *PFNGLROTATEDPROC)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLROTATEFPROC)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLSAMPLECOVERAGEPROC)(GLfloat, GLboolean);
typedef void  (GLAPIENTRY *PFNGLSAMPLEMASKIPROC)(GLuint, GLbitfield);
typedef void  (GLAPIENTRY *PFNGLSCALEDPROC)(GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLSCALEFPROC)(GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLSCISSORPROC)(GLint, GLint, GLsizei, GLsizei);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3BPROC)(GLbyte, GLbyte, GLbyte);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3BVPROC)(const GLbyte *);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3DPROC)(GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3FPROC)(GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3IPROC)(GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3SPROC)(GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3UBPROC)(GLubyte, GLubyte, GLubyte);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3UBVPROC)(const GLubyte *);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3UIPROC)(GLuint, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3UIVPROC)(const GLuint *);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3USPROC)(GLushort, GLushort, GLushort);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLOR3USVPROC)(const GLushort *);
typedef void  (GLAPIENTRY *PFNGLSECONDARYCOLORPOINTERPROC)(GLint, GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLSELECTBUFFERPROC)(GLsizei, GLuint *);
typedef void  (GLAPIENTRY *PFNGLSHADEMODELPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLSHADERSOURCEPROC)(GLuint, GLsizei, const GLchar *const*, const GLint *);
typedef void  (GLAPIENTRY *PFNGLSTENCILFUNCPROC)(GLenum, GLint, GLuint);
typedef void  (GLAPIENTRY *PFNGLSTENCILFUNCSEPARATEPROC)(GLenum, GLenum, GLint, GLuint);
typedef void  (GLAPIENTRY *PFNGLSTENCILMASKPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLSTENCILMASKSEPARATEPROC)(GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLSTENCILOPPROC)(GLenum, GLenum, GLenum);
typedef void  (GLAPIENTRY *PFNGLSTENCILOPSEPARATEPROC)(GLenum, GLenum, GLenum, GLenum);
typedef void  (GLAPIENTRY *PFNGLTEXBUFFERPROC)(GLenum, GLenum, GLuint);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD1DPROC)(GLdouble);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD1DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD1FPROC)(GLfloat);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD1FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD1IPROC)(GLint);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD1IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD1SPROC)(GLshort);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD1SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD2DPROC)(GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD2DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD2FPROC)(GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD2FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD2IPROC)(GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD2IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD2SPROC)(GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD2SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD3DPROC)(GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD3DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD3FPROC)(GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD3FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD3IPROC)(GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD3IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD3SPROC)(GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD3SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD4DPROC)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD4DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD4FPROC)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD4FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD4IPROC)(GLint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD4IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD4SPROC)(GLshort, GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLTEXCOORD4SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLTEXCOORDPOINTERPROC)(GLint, GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLTEXENVFPROC)(GLenum, GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLTEXENVFVPROC)(GLenum, GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLTEXENVIPROC)(GLenum, GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLTEXENVIVPROC)(GLenum, GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLTEXGENDPROC)(GLenum, GLenum, GLdouble);
typedef void  (GLAPIENTRY *PFNGLTEXGENDVPROC)(GLenum, GLenum, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLTEXGENFPROC)(GLenum, GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLTEXGENFVPROC)(GLenum, GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLTEXGENIPROC)(GLenum, GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLTEXGENIVPROC)(GLenum, GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLTEXIMAGE1DPROC)(GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const void *);
typedef void  (GLAPIENTRY *PFNGLTEXIMAGE2DPROC)(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *);
typedef void  (GLAPIENTRY *PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean);
typedef void  (GLAPIENTRY *PFNGLTEXIMAGE3DPROC)(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *);
typedef void  (GLAPIENTRY *PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean);
typedef void  (GLAPIENTRY *PFNGLTEXPARAMETERIIVPROC)(GLenum, GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLTEXPARAMETERIUIVPROC)(GLenum, GLenum, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLTEXPARAMETERFPROC)(GLenum, GLenum, GLfloat);
typedef void  (GLAPIENTRY *PFNGLTEXPARAMETERFVPROC)(GLenum, GLenum, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLTEXPARAMETERIPROC)(GLenum, GLenum, GLint);
typedef void  (GLAPIENTRY *PFNGLTEXPARAMETERIVPROC)(GLenum, GLenum, const GLint *);
typedef void  (GLAPIENTRY *PFNGLTEXSUBIMAGE1DPROC)(GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const void *);
typedef void  (GLAPIENTRY *PFNGLTEXSUBIMAGE2DPROC)(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void *);
typedef void  (GLAPIENTRY *PFNGLTEXSUBIMAGE3DPROC)(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const void *);
typedef void  (GLAPIENTRY *PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint, GLsizei, const GLchar *const*, GLenum);
typedef void  (GLAPIENTRY *PFNGLTRANSLATEDPROC)(GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLTRANSLATEFPROC)(GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLUNIFORM1FPROC)(GLint, GLfloat);
typedef void  (GLAPIENTRY *PFNGLUNIFORM1FVPROC)(GLint, GLsizei, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM1IPROC)(GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLUNIFORM1IVPROC)(GLint, GLsizei, const GLint *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM1UIPROC)(GLint, GLuint);
typedef void  (GLAPIENTRY *PFNGLUNIFORM1UIVPROC)(GLint, GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM2FPROC)(GLint, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLUNIFORM2FVPROC)(GLint, GLsizei, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM2IPROC)(GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLUNIFORM2IVPROC)(GLint, GLsizei, const GLint *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM2UIPROC)(GLint, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLUNIFORM2UIVPROC)(GLint, GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM3FPROC)(GLint, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLUNIFORM3FVPROC)(GLint, GLsizei, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM3IPROC)(GLint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLUNIFORM3IVPROC)(GLint, GLsizei, const GLint *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM3UIPROC)(GLint, GLuint, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLUNIFORM3UIVPROC)(GLint, GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM4FPROC)(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLUNIFORM4FVPROC)(GLint, GLsizei, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM4IPROC)(GLint, GLint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLUNIFORM4IVPROC)(GLint, GLsizei, const GLint *);
typedef void  (GLAPIENTRY *PFNGLUNIFORM4UIPROC)(GLint, GLuint, GLuint, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLUNIFORM4UIVPROC)(GLint, GLsizei, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLUNIFORMMATRIX2FVPROC)(GLint, GLsizei, GLboolean, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORMMATRIX2X3FVPROC)(GLint, GLsizei, GLboolean, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORMMATRIX2X4FVPROC)(GLint, GLsizei, GLboolean, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORMMATRIX3FVPROC)(GLint, GLsizei, GLboolean, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORMMATRIX3X2FVPROC)(GLint, GLsizei, GLboolean, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORMMATRIX3X4FVPROC)(GLint, GLsizei, GLboolean, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORMMATRIX4FVPROC)(GLint, GLsizei, GLboolean, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORMMATRIX4X2FVPROC)(GLint, GLsizei, GLboolean, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLUNIFORMMATRIX4X3FVPROC)(GLint, GLsizei, GLboolean, const GLfloat *);
typedef GLboolean (GLAPIENTRY *PFNGLUNMAPBUFFERPROC)(GLenum);
typedef void  (GLAPIENTRY *PFNGLUSEPROGRAMPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLVALIDATEPROGRAMPROC)(GLuint);
typedef void  (GLAPIENTRY *PFNGLVERTEX2DPROC)(GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLVERTEX2DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLVERTEX2FPROC)(GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLVERTEX2FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLVERTEX2IPROC)(GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLVERTEX2IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLVERTEX2SPROC)(GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLVERTEX2SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLVERTEX3DPROC)(GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLVERTEX3DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLVERTEX3FPROC)(GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLVERTEX3FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLVERTEX3IPROC)(GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLVERTEX3IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLVERTEX3SPROC)(GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLVERTEX3SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLVERTEX4DPROC)(GLdouble, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLVERTEX4DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLVERTEX4FPROC)(GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLVERTEX4FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLVERTEX4IPROC)(GLint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLVERTEX4IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLVERTEX4SPROC)(GLshort, GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLVERTEX4SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB1DPROC)(GLuint, GLdouble);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB1DVPROC)(GLuint, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB1FPROC)(GLuint, GLfloat);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB1FVPROC)(GLuint, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB1SPROC)(GLuint, GLshort);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB1SVPROC)(GLuint, const GLshort *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB2DPROC)(GLuint, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB2DVPROC)(GLuint, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB2FPROC)(GLuint, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB2FVPROC)(GLuint, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB2SPROC)(GLuint, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB2SVPROC)(GLuint, const GLshort *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB3DPROC)(GLuint, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB3DVPROC)(GLuint, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB3FPROC)(GLuint, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB3FVPROC)(GLuint, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB3SPROC)(GLuint, GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB3SVPROC)(GLuint, const GLshort *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4NBVPROC)(GLuint, const GLbyte *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4NIVPROC)(GLuint, const GLint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4NSVPROC)(GLuint, const GLshort *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4NUBPROC)(GLuint, GLubyte, GLubyte, GLubyte, GLubyte);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4NUBVPROC)(GLuint, const GLubyte *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4NUIVPROC)(GLuint, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4NUSVPROC)(GLuint, const GLushort *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4BVPROC)(GLuint, const GLbyte *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4DPROC)(GLuint, GLdouble, GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4DVPROC)(GLuint, const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4FPROC)(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4FVPROC)(GLuint, const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4IVPROC)(GLuint, const GLint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4SPROC)(GLuint, GLshort, GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4SVPROC)(GLuint, const GLshort *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4UBVPROC)(GLuint, const GLubyte *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4UIVPROC)(GLuint, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIB4USVPROC)(GLuint, const GLushort *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI1IPROC)(GLuint, GLint);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI1IVPROC)(GLuint, const GLint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI1UIPROC)(GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI1UIVPROC)(GLuint, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI2IPROC)(GLuint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI2IVPROC)(GLuint, const GLint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI2UIPROC)(GLuint, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI2UIVPROC)(GLuint, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI3IPROC)(GLuint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI3IVPROC)(GLuint, const GLint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI3UIPROC)(GLuint, GLuint, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI3UIVPROC)(GLuint, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI4BVPROC)(GLuint, const GLbyte *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI4IPROC)(GLuint, GLint, GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI4IVPROC)(GLuint, const GLint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI4SVPROC)(GLuint, const GLshort *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI4UBVPROC)(GLuint, const GLubyte *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI4UIPROC)(GLuint, GLuint, GLuint, GLuint, GLuint);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI4UIVPROC)(GLuint, const GLuint *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBI4USVPROC)(GLuint, const GLushort *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint, GLint, GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLVERTEXATTRIBPOINTERPROC)(GLuint, GLint, GLenum, GLboolean, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLVERTEXPOINTERPROC)(GLint, GLenum, GLsizei, const void *);
typedef void  (GLAPIENTRY *PFNGLVIEWPORTPROC)(GLint, GLint, GLsizei, GLsizei);
typedef void  (GLAPIENTRY *PFNGLWAITSYNCPROC)(GLsync, GLbitfield, GLuint64);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS2DPROC)(GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS2DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS2FPROC)(GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS2FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS2IPROC)(GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS2IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS2SPROC)(GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS2SVPROC)(const GLshort *);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS3DPROC)(GLdouble, GLdouble, GLdouble);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS3DVPROC)(const GLdouble *);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS3FPROC)(GLfloat, GLfloat, GLfloat);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS3FVPROC)(const GLfloat *);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS3IPROC)(GLint, GLint, GLint);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS3IVPROC)(const GLint *);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS3SPROC)(GLshort, GLshort, GLshort);
typedef void  (GLAPIENTRY *PFNGLWINDOWPOS3SVPROC)(const GLshort *);

extern PFNGLACCUMPROC greg_glAccum;
extern PFNGLACTIVETEXTUREPROC greg_glActiveTexture;
extern PFNGLALPHAFUNCPROC greg_glAlphaFunc;
extern PFNGLARETEXTURESRESIDENTPROC greg_glAreTexturesResident;
extern PFNGLARRAYELEMENTPROC greg_glArrayElement;
extern PFNGLATTACHSHADERPROC greg_glAttachShader;
extern PFNGLBEGINPROC greg_glBegin;
extern PFNGLBEGINCONDITIONALRENDERPROC greg_glBeginConditionalRender;
extern PFNGLBEGINQUERYPROC greg_glBeginQuery;
extern PFNGLBEGINTRANSFORMFEEDBACKPROC greg_glBeginTransformFeedback;
extern PFNGLBINDATTRIBLOCATIONPROC greg_glBindAttribLocation;
extern PFNGLBINDBUFFERPROC greg_glBindBuffer;
extern PFNGLBINDBUFFERBASEPROC greg_glBindBufferBase;
extern PFNGLBINDBUFFERRANGEPROC greg_glBindBufferRange;
extern PFNGLBINDFRAGDATALOCATIONPROC greg_glBindFragDataLocation;
extern PFNGLBINDFRAMEBUFFERPROC greg_glBindFramebuffer;
extern PFNGLBINDRENDERBUFFERPROC greg_glBindRenderbuffer;
extern PFNGLBINDTEXTUREPROC greg_glBindTexture;
extern PFNGLBINDVERTEXARRAYPROC greg_glBindVertexArray;
extern PFNGLBITMAPPROC greg_glBitmap;
extern PFNGLBLENDCOLORPROC greg_glBlendColor;
extern PFNGLBLENDEQUATIONPROC greg_glBlendEquation;
extern PFNGLBLENDEQUATIONSEPARATEPROC greg_glBlendEquationSeparate;
extern PFNGLBLENDFUNCPROC greg_glBlendFunc;
extern PFNGLBLENDFUNCSEPARATEPROC greg_glBlendFuncSeparate;
extern PFNGLBLITFRAMEBUFFERPROC greg_glBlitFramebuffer;
extern PFNGLBUFFERDATAPROC greg_glBufferData;
extern PFNGLBUFFERSUBDATAPROC greg_glBufferSubData;
extern PFNGLCALLLISTPROC greg_glCallList;
extern PFNGLCALLLISTSPROC greg_glCallLists;
extern PFNGLCHECKFRAMEBUFFERSTATUSPROC greg_glCheckFramebufferStatus;
extern PFNGLCLAMPCOLORPROC greg_glClampColor;
extern PFNGLCLEARPROC greg_glClear;
extern PFNGLCLEARACCUMPROC greg_glClearAccum;
extern PFNGLCLEARBUFFERFIPROC greg_glClearBufferfi;
extern PFNGLCLEARBUFFERFVPROC greg_glClearBufferfv;
extern PFNGLCLEARBUFFERIVPROC greg_glClearBufferiv;
extern PFNGLCLEARBUFFERUIVPROC greg_glClearBufferuiv;
extern PFNGLCLEARCOLORPROC greg_glClearColor;
extern PFNGLCLEARDEPTHPROC greg_glClearDepth;
extern PFNGLCLEARINDEXPROC greg_glClearIndex;
extern PFNGLCLEARSTENCILPROC greg_glClearStencil;
extern PFNGLCLIENTACTIVETEXTUREPROC greg_glClientActiveTexture;
extern PFNGLCLIENTWAITSYNCPROC greg_glClientWaitSync;
extern PFNGLCLIPPLANEPROC greg_glClipPlane;
extern PFNGLCOLOR3BPROC greg_glColor3b;
extern PFNGLCOLOR3BVPROC greg_glColor3bv;
extern PFNGLCOLOR3DPROC greg_glColor3d;
extern PFNGLCOLOR3DVPROC greg_glColor3dv;
extern PFNGLCOLOR3FPROC greg_glColor3f;
extern PFNGLCOLOR3FVPROC greg_glColor3fv;
extern PFNGLCOLOR3IPROC greg_glColor3i;
extern PFNGLCOLOR3IVPROC greg_glColor3iv;
extern PFNGLCOLOR3SPROC greg_glColor3s;
extern PFNGLCOLOR3SVPROC greg_glColor3sv;
extern PFNGLCOLOR3UBPROC greg_glColor3ub;
extern PFNGLCOLOR3UBVPROC greg_glColor3ubv;
extern PFNGLCOLOR3UIPROC greg_glColor3ui;
extern PFNGLCOLOR3UIVPROC greg_glColor3uiv;
extern PFNGLCOLOR3USPROC greg_glColor3us;
extern PFNGLCOLOR3USVPROC greg_glColor3usv;
extern PFNGLCOLOR4BPROC greg_glColor4b;
extern PFNGLCOLOR4BVPROC greg_glColor4bv;
extern PFNGLCOLOR4DPROC greg_glColor4d;
extern PFNGLCOLOR4DVPROC greg_glColor4dv;
extern PFNGLCOLOR4FPROC greg_glColor4f;
extern PFNGLCOLOR4FVPROC greg_glColor4fv;
extern PFNGLCOLOR4IPROC greg_glColor4i;
extern PFNGLCOLOR4IVPROC greg_glColor4iv;
extern PFNGLCOLOR4SPROC greg_glColor4s;
extern PFNGLCOLOR4SVPROC greg_glColor4sv;
extern PFNGLCOLOR4UBPROC greg_glColor4ub;
extern PFNGLCOLOR4UBVPROC greg_glColor4ubv;
extern PFNGLCOLOR4UIPROC greg_glColor4ui;
extern PFNGLCOLOR4UIVPROC greg_glColor4uiv;
extern PFNGLCOLOR4USPROC greg_glColor4us;
extern PFNGLCOLOR4USVPROC greg_glColor4usv;
extern PFNGLCOLORMASKPROC greg_glColorMask;
extern PFNGLCOLORMASKIPROC greg_glColorMaski;
extern PFNGLCOLORMATERIALPROC greg_glColorMaterial;
extern PFNGLCOLORPOINTERPROC greg_glColorPointer;
extern PFNGLCOMPILESHADERPROC greg_glCompileShader;
extern PFNGLCOMPRESSEDTEXIMAGE1DPROC greg_glCompressedTexImage1D;
extern PFNGLCOMPRESSEDTEXIMAGE2DPROC greg_glCompressedTexImage2D;
extern PFNGLCOMPRESSEDTEXIMAGE3DPROC greg_glCompressedTexImage3D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC greg_glCompressedTexSubImage1D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC greg_glCompressedTexSubImage2D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC greg_glCompressedTexSubImage3D;
extern PFNGLCOPYBUFFERSUBDATAPROC greg_glCopyBufferSubData;
extern PFNGLCOPYPIXELSPROC greg_glCopyPixels;
extern PFNGLCOPYTEXIMAGE1DPROC greg_glCopyTexImage1D;
extern PFNGLCOPYTEXIMAGE2DPROC greg_glCopyTexImage2D;
extern PFNGLCOPYTEXSUBIMAGE1DPROC greg_glCopyTexSubImage1D;
extern PFNGLCOPYTEXSUBIMAGE2DPROC greg_glCopyTexSubImage2D;
extern PFNGLCOPYTEXSUBIMAGE3DPROC greg_glCopyTexSubImage3D;
extern PFNGLCREATEPROGRAMPROC greg_glCreateProgram;
extern PFNGLCREATESHADERPROC greg_glCreateShader;
extern PFNGLCULLFACEPROC greg_glCullFace;
extern PFNGLDEBUGMESSAGECALLBACKARBPROC greg_glDebugMessageCallbackARB;
extern PFNGLDEBUGMESSAGECONTROLARBPROC greg_glDebugMessageControlARB;
extern PFNGLDEBUGMESSAGEINSERTARBPROC greg_glDebugMessageInsertARB;
extern PFNGLDELETEBUFFERSPROC greg_glDeleteBuffers;
extern PFNGLDELETEFRAMEBUFFERSPROC greg_glDeleteFramebuffers;
extern PFNGLDELETELISTSPROC greg_glDeleteLists;
extern PFNGLDELETEPROGRAMPROC greg_glDeleteProgram;
extern PFNGLDELETEQUERIESPROC greg_glDeleteQueries;
extern PFNGLDELETERENDERBUFFERSPROC greg_glDeleteRenderbuffers;
extern PFNGLDELETESHADERPROC greg_glDeleteShader;
extern PFNGLDELETESYNCPROC greg_glDeleteSync;
extern PFNGLDELETETEXTURESPROC greg_glDeleteTextures;
extern PFNGLDELETEVERTEXARRAYSPROC greg_glDeleteVertexArrays;
extern PFNGLDEPTHFUNCPROC greg_glDepthFunc;
extern PFNGLDEPTHMASKPROC greg_glDepthMask;
extern PFNGLDEPTHRANGEPROC greg_glDepthRange;
extern PFNGLDETACHSHADERPROC greg_glDetachShader;
extern PFNGLDISABLEPROC greg_glDisable;
extern PFNGLDISABLECLIENTSTATEPROC greg_glDisableClientState;
extern PFNGLDISABLEVERTEXATTRIBARRAYPROC greg_glDisableVertexAttribArray;
extern PFNGLDISABLEIPROC greg_glDisablei;
extern PFNGLDRAWARRAYSPROC greg_glDrawArrays;
extern PFNGLDRAWARRAYSINSTANCEDPROC greg_glDrawArraysInstanced;
extern PFNGLDRAWBUFFERPROC greg_glDrawBuffer;
extern PFNGLDRAWBUFFERSPROC greg_glDrawBuffers;
extern PFNGLDRAWELEMENTSPROC greg_glDrawElements;
extern PFNGLDRAWELEMENTSBASEVERTEXPROC greg_glDrawElementsBaseVertex;
extern PFNGLDRAWELEMENTSINSTANCEDPROC greg_glDrawElementsInstanced;
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC greg_glDrawElementsInstancedBaseVertex;
extern PFNGLDRAWPIXELSPROC greg_glDrawPixels;
extern PFNGLDRAWRANGEELEMENTSPROC greg_glDrawRangeElements;
extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC greg_glDrawRangeElementsBaseVertex;
extern PFNGLEDGEFLAGPROC greg_glEdgeFlag;
extern PFNGLEDGEFLAGPOINTERPROC greg_glEdgeFlagPointer;
extern PFNGLEDGEFLAGVPROC greg_glEdgeFlagv;
extern PFNGLENABLEPROC greg_glEnable;
extern PFNGLENABLECLIENTSTATEPROC greg_glEnableClientState;
extern PFNGLENABLEVERTEXATTRIBARRAYPROC greg_glEnableVertexAttribArray;
extern PFNGLENABLEIPROC greg_glEnablei;
extern PFNGLENDPROC greg_glEnd;
extern PFNGLENDCONDITIONALRENDERPROC greg_glEndConditionalRender;
extern PFNGLENDLISTPROC greg_glEndList;
extern PFNGLENDQUERYPROC greg_glEndQuery;
extern PFNGLENDTRANSFORMFEEDBACKPROC greg_glEndTransformFeedback;
extern PFNGLEVALCOORD1DPROC greg_glEvalCoord1d;
extern PFNGLEVALCOORD1DVPROC greg_glEvalCoord1dv;
extern PFNGLEVALCOORD1FPROC greg_glEvalCoord1f;
extern PFNGLEVALCOORD1FVPROC greg_glEvalCoord1fv;
extern PFNGLEVALCOORD2DPROC greg_glEvalCoord2d;
extern PFNGLEVALCOORD2DVPROC greg_glEvalCoord2dv;
extern PFNGLEVALCOORD2FPROC greg_glEvalCoord2f;
extern PFNGLEVALCOORD2FVPROC greg_glEvalCoord2fv;
extern PFNGLEVALMESH1PROC greg_glEvalMesh1;
extern PFNGLEVALMESH2PROC greg_glEvalMesh2;
extern PFNGLEVALPOINT1PROC greg_glEvalPoint1;
extern PFNGLEVALPOINT2PROC greg_glEvalPoint2;
extern PFNGLFEEDBACKBUFFERPROC greg_glFeedbackBuffer;
extern PFNGLFENCESYNCPROC greg_glFenceSync;
extern PFNGLFINISHPROC greg_glFinish;
extern PFNGLFLUSHPROC greg_glFlush;
extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC greg_glFlushMappedBufferRange;
extern PFNGLFOGCOORDPOINTERPROC greg_glFogCoordPointer;
extern PFNGLFOGCOORDDPROC greg_glFogCoordd;
extern PFNGLFOGCOORDDVPROC greg_glFogCoorddv;
extern PFNGLFOGCOORDFPROC greg_glFogCoordf;
extern PFNGLFOGCOORDFVPROC greg_glFogCoordfv;
extern PFNGLFOGFPROC greg_glFogf;
extern PFNGLFOGFVPROC greg_glFogfv;
extern PFNGLFOGIPROC greg_glFogi;
extern PFNGLFOGIVPROC greg_glFogiv;
extern PFNGLFRAMEBUFFERRENDERBUFFERPROC greg_glFramebufferRenderbuffer;
extern PFNGLFRAMEBUFFERTEXTUREPROC greg_glFramebufferTexture;
extern PFNGLFRAMEBUFFERTEXTURE1DPROC greg_glFramebufferTexture1D;
extern PFNGLFRAMEBUFFERTEXTURE2DPROC greg_glFramebufferTexture2D;
extern PFNGLFRAMEBUFFERTEXTURE3DPROC greg_glFramebufferTexture3D;
extern PFNGLFRAMEBUFFERTEXTURELAYERPROC greg_glFramebufferTextureLayer;
extern PFNGLFRONTFACEPROC greg_glFrontFace;
extern PFNGLFRUSTUMPROC greg_glFrustum;
extern PFNGLGENBUFFERSPROC greg_glGenBuffers;
extern PFNGLGENFRAMEBUFFERSPROC greg_glGenFramebuffers;
extern PFNGLGENLISTSPROC greg_glGenLists;
extern PFNGLGENQUERIESPROC greg_glGenQueries;
extern PFNGLGENRENDERBUFFERSPROC greg_glGenRenderbuffers;
extern PFNGLGENTEXTURESPROC greg_glGenTextures;
extern PFNGLGENVERTEXARRAYSPROC greg_glGenVertexArrays;
extern PFNGLGENERATEMIPMAPPROC greg_glGenerateMipmap;
extern PFNGLGETACTIVEATTRIBPROC greg_glGetActiveAttrib;
extern PFNGLGETACTIVEUNIFORMPROC greg_glGetActiveUniform;
extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC greg_glGetActiveUniformBlockName;
extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC greg_glGetActiveUniformBlockiv;
extern PFNGLGETACTIVEUNIFORMNAMEPROC greg_glGetActiveUniformName;
extern PFNGLGETACTIVEUNIFORMSIVPROC greg_glGetActiveUniformsiv;
extern PFNGLGETATTACHEDSHADERSPROC greg_glGetAttachedShaders;
extern PFNGLGETATTRIBLOCATIONPROC greg_glGetAttribLocation;
extern PFNGLGETBOOLEANI_VPROC greg_glGetBooleani_v;
extern PFNGLGETBOOLEANVPROC greg_glGetBooleanv;
extern PFNGLGETBUFFERPARAMETERI64VPROC greg_glGetBufferParameteri64v;
extern PFNGLGETBUFFERPARAMETERIVPROC greg_glGetBufferParameteriv;
extern PFNGLGETBUFFERPOINTERVPROC greg_glGetBufferPointerv;
extern PFNGLGETBUFFERSUBDATAPROC greg_glGetBufferSubData;
extern PFNGLGETCLIPPLANEPROC greg_glGetClipPlane;
extern PFNGLGETCOMPRESSEDTEXIMAGEPROC greg_glGetCompressedTexImage;
extern PFNGLGETDEBUGMESSAGELOGARBPROC greg_glGetDebugMessageLogARB;
extern PFNGLGETDOUBLEVPROC greg_glGetDoublev;
extern PFNGLGETERRORPROC greg_glGetError;
extern PFNGLGETFLOATVPROC greg_glGetFloatv;
extern PFNGLGETFRAGDATALOCATIONPROC greg_glGetFragDataLocation;
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC greg_glGetFramebufferAttachmentParameteriv;
extern PFNGLGETINTEGER64I_VPROC greg_glGetInteger64i_v;
extern PFNGLGETINTEGER64VPROC greg_glGetInteger64v;
extern PFNGLGETINTEGERI_VPROC greg_glGetIntegeri_v;
extern PFNGLGETINTEGERVPROC greg_glGetIntegerv;
extern PFNGLGETLIGHTFVPROC greg_glGetLightfv;
extern PFNGLGETLIGHTIVPROC greg_glGetLightiv;
extern PFNGLGETMAPDVPROC greg_glGetMapdv;
extern PFNGLGETMAPFVPROC greg_glGetMapfv;
extern PFNGLGETMAPIVPROC greg_glGetMapiv;
extern PFNGLGETMATERIALFVPROC greg_glGetMaterialfv;
extern PFNGLGETMATERIALIVPROC greg_glGetMaterialiv;
extern PFNGLGETMULTISAMPLEFVPROC greg_glGetMultisamplefv;
extern PFNGLGETPIXELMAPFVPROC greg_glGetPixelMapfv;
extern PFNGLGETPIXELMAPUIVPROC greg_glGetPixelMapuiv;
extern PFNGLGETPIXELMAPUSVPROC greg_glGetPixelMapusv;
extern PFNGLGETPOINTERVPROC greg_glGetPointerv;
extern PFNGLGETPOLYGONSTIPPLEPROC greg_glGetPolygonStipple;
extern PFNGLGETPROGRAMINFOLOGPROC greg_glGetProgramInfoLog;
extern PFNGLGETPROGRAMIVPROC greg_glGetProgramiv;
extern PFNGLGETQUERYOBJECTIVPROC greg_glGetQueryObjectiv;
extern PFNGLGETQUERYOBJECTUIVPROC greg_glGetQueryObjectuiv;
extern PFNGLGETQUERYIVPROC greg_glGetQueryiv;
extern PFNGLGETRENDERBUFFERPARAMETERIVPROC greg_glGetRenderbufferParameteriv;
extern PFNGLGETSHADERINFOLOGPROC greg_glGetShaderInfoLog;
extern PFNGLGETSHADERSOURCEPROC greg_glGetShaderSource;
extern PFNGLGETSHADERIVPROC greg_glGetShaderiv;
extern PFNGLGETSTRINGPROC greg_glGetString;
extern PFNGLGETSTRINGIPROC greg_glGetStringi;
extern PFNGLGETSYNCIVPROC greg_glGetSynciv;
extern PFNGLGETTEXENVFVPROC greg_glGetTexEnvfv;
extern PFNGLGETTEXENVIVPROC greg_glGetTexEnviv;
extern PFNGLGETTEXGENDVPROC greg_glGetTexGendv;
extern PFNGLGETTEXGENFVPROC greg_glGetTexGenfv;
extern PFNGLGETTEXGENIVPROC greg_glGetTexGeniv;
extern PFNGLGETTEXIMAGEPROC greg_glGetTexImage;
extern PFNGLGETTEXLEVELPARAMETERFVPROC greg_glGetTexLevelParameterfv;
extern PFNGLGETTEXLEVELPARAMETERIVPROC greg_glGetTexLevelParameteriv;
extern PFNGLGETTEXPARAMETERIIVPROC greg_glGetTexParameterIiv;
extern PFNGLGETTEXPARAMETERIUIVPROC greg_glGetTexParameterIuiv;
extern PFNGLGETTEXPARAMETERFVPROC greg_glGetTexParameterfv;
extern PFNGLGETTEXPARAMETERIVPROC greg_glGetTexParameteriv;
extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC greg_glGetTransformFeedbackVarying;
extern PFNGLGETUNIFORMBLOCKINDEXPROC greg_glGetUniformBlockIndex;
extern PFNGLGETUNIFORMINDICESPROC greg_glGetUniformIndices;
extern PFNGLGETUNIFORMLOCATIONPROC greg_glGetUniformLocation;
extern PFNGLGETUNIFORMFVPROC greg_glGetUniformfv;
extern PFNGLGETUNIFORMIVPROC greg_glGetUniformiv;
extern PFNGLGETUNIFORMUIVPROC greg_glGetUniformuiv;
extern PFNGLGETVERTEXATTRIBIIVPROC greg_glGetVertexAttribIiv;
extern PFNGLGETVERTEXATTRIBIUIVPROC greg_glGetVertexAttribIuiv;
extern PFNGLGETVERTEXATTRIBPOINTERVPROC greg_glGetVertexAttribPointerv;
extern PFNGLGETVERTEXATTRIBDVPROC greg_glGetVertexAttribdv;
extern PFNGLGETVERTEXATTRIBFVPROC greg_glGetVertexAttribfv;
extern PFNGLGETVERTEXATTRIBIVPROC greg_glGetVertexAttribiv;
extern PFNGLHINTPROC greg_glHint;
extern PFNGLINDEXMASKPROC greg_glIndexMask;
extern PFNGLINDEXPOINTERPROC greg_glIndexPointer;
extern PFNGLINDEXDPROC greg_glIndexd;
extern PFNGLINDEXDVPROC greg_glIndexdv;
extern PFNGLINDEXFPROC greg_glIndexf;
extern PFNGLINDEXFVPROC greg_glIndexfv;
extern PFNGLINDEXIPROC greg_glIndexi;
extern PFNGLINDEXIVPROC greg_glIndexiv;
extern PFNGLINDEXSPROC greg_glIndexs;
extern PFNGLINDEXSVPROC greg_glIndexsv;
extern PFNGLINDEXUBPROC greg_glIndexub;
extern PFNGLINDEXUBVPROC greg_glIndexubv;
extern PFNGLINITNAMESPROC greg_glInitNames;
extern PFNGLINTERLEAVEDARRAYSPROC greg_glInterleavedArrays;
extern PFNGLISBUFFERPROC greg_glIsBuffer;
extern PFNGLISENABLEDPROC greg_glIsEnabled;
extern PFNGLISENABLEDIPROC greg_glIsEnabledi;
extern PFNGLISFRAMEBUFFERPROC greg_glIsFramebuffer;
extern PFNGLISLISTPROC greg_glIsList;
extern PFNGLISPROGRAMPROC greg_glIsProgram;
extern PFNGLISQUERYPROC greg_glIsQuery;
extern PFNGLISRENDERBUFFERPROC greg_glIsRenderbuffer;
extern PFNGLISSHADERPROC greg_glIsShader;
extern PFNGLISSYNCPROC greg_glIsSync;
extern PFNGLISTEXTUREPROC greg_glIsTexture;
extern PFNGLISVERTEXARRAYPROC greg_glIsVertexArray;
extern PFNGLLIGHTMODELFPROC greg_glLightModelf;
extern PFNGLLIGHTMODELFVPROC greg_glLightModelfv;
extern PFNGLLIGHTMODELIPROC greg_glLightModeli;
extern PFNGLLIGHTMODELIVPROC greg_glLightModeliv;
extern PFNGLLIGHTFPROC greg_glLightf;
extern PFNGLLIGHTFVPROC greg_glLightfv;
extern PFNGLLIGHTIPROC greg_glLighti;
extern PFNGLLIGHTIVPROC greg_glLightiv;
extern PFNGLLINESTIPPLEPROC greg_glLineStipple;
extern PFNGLLINEWIDTHPROC greg_glLineWidth;
extern PFNGLLINKPROGRAMPROC greg_glLinkProgram;
extern PFNGLLISTBASEPROC greg_glListBase;
extern PFNGLLOADIDENTITYPROC greg_glLoadIdentity;
extern PFNGLLOADMATRIXDPROC greg_glLoadMatrixd;
extern PFNGLLOADMATRIXFPROC greg_glLoadMatrixf;
extern PFNGLLOADNAMEPROC greg_glLoadName;
extern PFNGLLOADTRANSPOSEMATRIXDPROC greg_glLoadTransposeMatrixd;
extern PFNGLLOADTRANSPOSEMATRIXFPROC greg_glLoadTransposeMatrixf;
extern PFNGLLOGICOPPROC greg_glLogicOp;
extern PFNGLMAP1DPROC greg_glMap1d;
extern PFNGLMAP1FPROC greg_glMap1f;
extern PFNGLMAP2DPROC greg_glMap2d;
extern PFNGLMAP2FPROC greg_glMap2f;
extern PFNGLMAPBUFFERPROC greg_glMapBuffer;
extern PFNGLMAPBUFFERRANGEPROC greg_glMapBufferRange;
extern PFNGLMAPGRID1DPROC greg_glMapGrid1d;
extern PFNGLMAPGRID1FPROC greg_glMapGrid1f;
extern PFNGLMAPGRID2DPROC greg_glMapGrid2d;
extern PFNGLMAPGRID2FPROC greg_glMapGrid2f;
extern PFNGLMATERIALFPROC greg_glMaterialf;
extern PFNGLMATERIALFVPROC greg_glMaterialfv;
extern PFNGLMATERIALIPROC greg_glMateriali;
extern PFNGLMATERIALIVPROC greg_glMaterialiv;
extern PFNGLMATRIXMODEPROC greg_glMatrixMode;
extern PFNGLMULTMATRIXDPROC greg_glMultMatrixd;
extern PFNGLMULTMATRIXFPROC greg_glMultMatrixf;
extern PFNGLMULTTRANSPOSEMATRIXDPROC greg_glMultTransposeMatrixd;
extern PFNGLMULTTRANSPOSEMATRIXFPROC greg_glMultTransposeMatrixf;
extern PFNGLMULTIDRAWARRAYSPROC greg_glMultiDrawArrays;
extern PFNGLMULTIDRAWELEMENTSPROC greg_glMultiDrawElements;
extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC greg_glMultiDrawElementsBaseVertex;
extern PFNGLMULTITEXCOORD1DPROC greg_glMultiTexCoord1d;
extern PFNGLMULTITEXCOORD1DVPROC greg_glMultiTexCoord1dv;
extern PFNGLMULTITEXCOORD1FPROC greg_glMultiTexCoord1f;
extern PFNGLMULTITEXCOORD1FVPROC greg_glMultiTexCoord1fv;
extern PFNGLMULTITEXCOORD1IPROC greg_glMultiTexCoord1i;
extern PFNGLMULTITEXCOORD1IVPROC greg_glMultiTexCoord1iv;
extern PFNGLMULTITEXCOORD1SPROC greg_glMultiTexCoord1s;
extern PFNGLMULTITEXCOORD1SVPROC greg_glMultiTexCoord1sv;
extern PFNGLMULTITEXCOORD2DPROC greg_glMultiTexCoord2d;
extern PFNGLMULTITEXCOORD2DVPROC greg_glMultiTexCoord2dv;
extern PFNGLMULTITEXCOORD2FPROC greg_glMultiTexCoord2f;
extern PFNGLMULTITEXCOORD2FVPROC greg_glMultiTexCoord2fv;
extern PFNGLMULTITEXCOORD2IPROC greg_glMultiTexCoord2i;
extern PFNGLMULTITEXCOORD2IVPROC greg_glMultiTexCoord2iv;
extern PFNGLMULTITEXCOORD2SPROC greg_glMultiTexCoord2s;
extern PFNGLMULTITEXCOORD2SVPROC greg_glMultiTexCoord2sv;
extern PFNGLMULTITEXCOORD3DPROC greg_glMultiTexCoord3d;
extern PFNGLMULTITEXCOORD3DVPROC greg_glMultiTexCoord3dv;
extern PFNGLMULTITEXCOORD3FPROC greg_glMultiTexCoord3f;
extern PFNGLMULTITEXCOORD3FVPROC greg_glMultiTexCoord3fv;
extern PFNGLMULTITEXCOORD3IPROC greg_glMultiTexCoord3i;
extern PFNGLMULTITEXCOORD3IVPROC greg_glMultiTexCoord3iv;
extern PFNGLMULTITEXCOORD3SPROC greg_glMultiTexCoord3s;
extern PFNGLMULTITEXCOORD3SVPROC greg_glMultiTexCoord3sv;
extern PFNGLMULTITEXCOORD4DPROC greg_glMultiTexCoord4d;
extern PFNGLMULTITEXCOORD4DVPROC greg_glMultiTexCoord4dv;
extern PFNGLMULTITEXCOORD4FPROC greg_glMultiTexCoord4f;
extern PFNGLMULTITEXCOORD4FVPROC greg_glMultiTexCoord4fv;
extern PFNGLMULTITEXCOORD4IPROC greg_glMultiTexCoord4i;
extern PFNGLMULTITEXCOORD4IVPROC greg_glMultiTexCoord4iv;
extern PFNGLMULTITEXCOORD4SPROC greg_glMultiTexCoord4s;
extern PFNGLMULTITEXCOORD4SVPROC greg_glMultiTexCoord4sv;
extern PFNGLNEWLISTPROC greg_glNewList;
extern PFNGLNORMAL3BPROC greg_glNormal3b;
extern PFNGLNORMAL3BVPROC greg_glNormal3bv;
extern PFNGLNORMAL3DPROC greg_glNormal3d;
extern PFNGLNORMAL3DVPROC greg_glNormal3dv;
extern PFNGLNORMAL3FPROC greg_glNormal3f;
extern PFNGLNORMAL3FVPROC greg_glNormal3fv;
extern PFNGLNORMAL3IPROC greg_glNormal3i;
extern PFNGLNORMAL3IVPROC greg_glNormal3iv;
extern PFNGLNORMAL3SPROC greg_glNormal3s;
extern PFNGLNORMAL3SVPROC greg_glNormal3sv;
extern PFNGLNORMALPOINTERPROC greg_glNormalPointer;
extern PFNGLORTHOPROC greg_glOrtho;
extern PFNGLPASSTHROUGHPROC greg_glPassThrough;
extern PFNGLPIXELMAPFVPROC greg_glPixelMapfv;
extern PFNGLPIXELMAPUIVPROC greg_glPixelMapuiv;
extern PFNGLPIXELMAPUSVPROC greg_glPixelMapusv;
extern PFNGLPIXELSTOREFPROC greg_glPixelStoref;
extern PFNGLPIXELSTOREIPROC greg_glPixelStorei;
extern PFNGLPIXELTRANSFERFPROC greg_glPixelTransferf;
extern PFNGLPIXELTRANSFERIPROC greg_glPixelTransferi;
extern PFNGLPIXELZOOMPROC greg_glPixelZoom;
extern PFNGLPOINTPARAMETERFPROC greg_glPointParameterf;
extern PFNGLPOINTPARAMETERFVPROC greg_glPointParameterfv;
extern PFNGLPOINTPARAMETERIPROC greg_glPointParameteri;
extern PFNGLPOINTPARAMETERIVPROC greg_glPointParameteriv;
extern PFNGLPOINTSIZEPROC greg_glPointSize;
extern PFNGLPOLYGONMODEPROC greg_glPolygonMode;
extern PFNGLPOLYGONOFFSETPROC greg_glPolygonOffset;
extern PFNGLPOLYGONSTIPPLEPROC greg_glPolygonStipple;
extern PFNGLPOPATTRIBPROC greg_glPopAttrib;
extern PFNGLPOPCLIENTATTRIBPROC greg_glPopClientAttrib;
extern PFNGLPOPMATRIXPROC greg_glPopMatrix;
extern PFNGLPOPNAMEPROC greg_glPopName;
extern PFNGLPRIMITIVERESTARTINDEXPROC greg_glPrimitiveRestartIndex;
extern PFNGLPRIORITIZETEXTURESPROC greg_glPrioritizeTextures;
extern PFNGLPROVOKINGVERTEXPROC greg_glProvokingVertex;
extern PFNGLPUSHATTRIBPROC greg_glPushAttrib;
extern PFNGLPUSHCLIENTATTRIBPROC greg_glPushClientAttrib;
extern PFNGLPUSHMATRIXPROC greg_glPushMatrix;
extern PFNGLPUSHNAMEPROC greg_glPushName;
extern PFNGLRASTERPOS2DPROC greg_glRasterPos2d;
extern PFNGLRASTERPOS2DVPROC greg_glRasterPos2dv;
extern PFNGLRASTERPOS2FPROC greg_glRasterPos2f;
extern PFNGLRASTERPOS2FVPROC greg_glRasterPos2fv;
extern PFNGLRASTERPOS2IPROC greg_glRasterPos2i;
extern PFNGLRASTERPOS2IVPROC greg_glRasterPos2iv;
extern PFNGLRASTERPOS2SPROC greg_glRasterPos2s;
extern PFNGLRASTERPOS2SVPROC greg_glRasterPos2sv;
extern PFNGLRASTERPOS3DPROC greg_glRasterPos3d;
extern PFNGLRASTERPOS3DVPROC greg_glRasterPos3dv;
extern PFNGLRASTERPOS3FPROC greg_glRasterPos3f;
extern PFNGLRASTERPOS3FVPROC greg_glRasterPos3fv;
extern PFNGLRASTERPOS3IPROC greg_glRasterPos3i;
extern PFNGLRASTERPOS3IVPROC greg_glRasterPos3iv;
extern PFNGLRASTERPOS3SPROC greg_glRasterPos3s;
extern PFNGLRASTERPOS3SVPROC greg_glRasterPos3sv;
extern PFNGLRASTERPOS4DPROC greg_glRasterPos4d;
extern PFNGLRASTERPOS4DVPROC greg_glRasterPos4dv;
extern PFNGLRASTERPOS4FPROC greg_glRasterPos4f;
extern PFNGLRASTERPOS4FVPROC greg_glRasterPos4fv;
extern PFNGLRASTERPOS4IPROC greg_glRasterPos4i;
extern PFNGLRASTERPOS4IVPROC greg_glRasterPos4iv;
extern PFNGLRASTERPOS4SPROC greg_glRasterPos4s;
extern PFNGLRASTERPOS4SVPROC greg_glRasterPos4sv;
extern PFNGLREADBUFFERPROC greg_glReadBuffer;
extern PFNGLREADPIXELSPROC greg_glReadPixels;
extern PFNGLRECTDPROC greg_glRectd;
extern PFNGLRECTDVPROC greg_glRectdv;
extern PFNGLRECTFPROC greg_glRectf;
extern PFNGLRECTFVPROC greg_glRectfv;
extern PFNGLRECTIPROC greg_glRecti;
extern PFNGLRECTIVPROC greg_glRectiv;
extern PFNGLRECTSPROC greg_glRects;
extern PFNGLRECTSVPROC greg_glRectsv;
extern PFNGLRENDERMODEPROC greg_glRenderMode;
extern PFNGLRENDERBUFFERSTORAGEPROC greg_glRenderbufferStorage;
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC greg_glRenderbufferStorageMultisample;
extern PFNGLROTATEDPROC greg_glRotated;
extern PFNGLROTATEFPROC greg_glRotatef;
extern PFNGLSAMPLECOVERAGEPROC greg_glSampleCoverage;
extern PFNGLSAMPLEMASKIPROC greg_glSampleMaski;
extern PFNGLSCALEDPROC greg_glScaled;
extern PFNGLSCALEFPROC greg_glScalef;
extern PFNGLSCISSORPROC greg_glScissor;
extern PFNGLSECONDARYCOLOR3BPROC greg_glSecondaryColor3b;
extern PFNGLSECONDARYCOLOR3BVPROC greg_glSecondaryColor3bv;
extern PFNGLSECONDARYCOLOR3DPROC greg_glSecondaryColor3d;
extern PFNGLSECONDARYCOLOR3DVPROC greg_glSecondaryColor3dv;
extern PFNGLSECONDARYCOLOR3FPROC greg_glSecondaryColor3f;
extern PFNGLSECONDARYCOLOR3FVPROC greg_glSecondaryColor3fv;
extern PFNGLSECONDARYCOLOR3IPROC greg_glSecondaryColor3i;
extern PFNGLSECONDARYCOLOR3IVPROC greg_glSecondaryColor3iv;
extern PFNGLSECONDARYCOLOR3SPROC greg_glSecondaryColor3s;
extern PFNGLSECONDARYCOLOR3SVPROC greg_glSecondaryColor3sv;
extern PFNGLSECONDARYCOLOR3UBPROC greg_glSecondaryColor3ub;
extern PFNGLSECONDARYCOLOR3UBVPROC greg_glSecondaryColor3ubv;
extern PFNGLSECONDARYCOLOR3UIPROC greg_glSecondaryColor3ui;
extern PFNGLSECONDARYCOLOR3UIVPROC greg_glSecondaryColor3uiv;
extern PFNGLSECONDARYCOLOR3USPROC greg_glSecondaryColor3us;
extern PFNGLSECONDARYCOLOR3USVPROC greg_glSecondaryColor3usv;
extern PFNGLSECONDARYCOLORPOINTERPROC greg_glSecondaryColorPointer;
extern PFNGLSELECTBUFFERPROC greg_glSelectBuffer;
extern PFNGLSHADEMODELPROC greg_glShadeModel;
extern PFNGLSHADERSOURCEPROC greg_glShaderSource;
extern PFNGLSTENCILFUNCPROC greg_glStencilFunc;
extern PFNGLSTENCILFUNCSEPARATEPROC greg_glStencilFuncSeparate;
extern PFNGLSTENCILMASKPROC greg_glStencilMask;
extern PFNGLSTENCILMASKSEPARATEPROC greg_glStencilMaskSeparate;
extern PFNGLSTENCILOPPROC greg_glStencilOp;
extern PFNGLSTENCILOPSEPARATEPROC greg_glStencilOpSeparate;
extern PFNGLTEXBUFFERPROC greg_glTexBuffer;
extern PFNGLTEXCOORD1DPROC greg_glTexCoord1d;
extern PFNGLTEXCOORD1DVPROC greg_glTexCoord1dv;
extern PFNGLTEXCOORD1FPROC greg_glTexCoord1f;
extern PFNGLTEXCOORD1FVPROC greg_glTexCoord1fv;
extern PFNGLTEXCOORD1IPROC greg_glTexCoord1i;
extern PFNGLTEXCOORD1IVPROC greg_glTexCoord1iv;
extern PFNGLTEXCOORD1SPROC greg_glTexCoord1s;
extern PFNGLTEXCOORD1SVPROC greg_glTexCoord1sv;
extern PFNGLTEXCOORD2DPROC greg_glTexCoord2d;
extern PFNGLTEXCOORD2DVPROC greg_glTexCoord2dv;
extern PFNGLTEXCOORD2FPROC greg_glTexCoord2f;
extern PFNGLTEXCOORD2FVPROC greg_glTexCoord2fv;
extern PFNGLTEXCOORD2IPROC greg_glTexCoord2i;
extern PFNGLTEXCOORD2IVPROC greg_glTexCoord2iv;
extern PFNGLTEXCOORD2SPROC greg_glTexCoord2s;
extern PFNGLTEXCOORD2SVPROC greg_glTexCoord2sv;
extern PFNGLTEXCOORD3DPROC greg_glTexCoord3d;
extern PFNGLTEXCOORD3DVPROC greg_glTexCoord3dv;
extern PFNGLTEXCOORD3FPROC greg_glTexCoord3f;
extern PFNGLTEXCOORD3FVPROC greg_glTexCoord3fv;
extern PFNGLTEXCOORD3IPROC greg_glTexCoord3i;
extern PFNGLTEXCOORD3IVPROC greg_glTexCoord3iv;
extern PFNGLTEXCOORD3SPROC greg_glTexCoord3s;
extern PFNGLTEXCOORD3SVPROC greg_glTexCoord3sv;
extern PFNGLTEXCOORD4DPROC greg_glTexCoord4d;
extern PFNGLTEXCOORD4DVPROC greg_glTexCoord4dv;
extern PFNGLTEXCOORD4FPROC greg_glTexCoord4f;
extern PFNGLTEXCOORD4FVPROC greg_glTexCoord4fv;
extern PFNGLTEXCOORD4IPROC greg_glTexCoord4i;
extern PFNGLTEXCOORD4IVPROC greg_glTexCoord4iv;
extern PFNGLTEXCOORD4SPROC greg_glTexCoord4s;
extern PFNGLTEXCOORD4SVPROC greg_glTexCoord4sv;
extern PFNGLTEXCOORDPOINTERPROC greg_glTexCoordPointer;
extern PFNGLTEXENVFPROC greg_glTexEnvf;
extern PFNGLTEXENVFVPROC greg_glTexEnvfv;
extern PFNGLTEXENVIPROC greg_glTexEnvi;
extern PFNGLTEXENVIVPROC greg_glTexEnviv;
extern PFNGLTEXGENDPROC greg_glTexGend;
extern PFNGLTEXGENDVPROC greg_glTexGendv;
extern PFNGLTEXGENFPROC greg_glTexGenf;
extern PFNGLTEXGENFVPROC greg_glTexGenfv;
extern PFNGLTEXGENIPROC greg_glTexGeni;
extern PFNGLTEXGENIVPROC greg_glTexGeniv;
extern PFNGLTEXIMAGE1DPROC greg_glTexImage1D;
extern PFNGLTEXIMAGE2DPROC greg_glTexImage2D;
extern PFNGLTEXIMAGE2DMULTISAMPLEPROC greg_glTexImage2DMultisample;
extern PFNGLTEXIMAGE3DPROC greg_glTexImage3D;
extern PFNGLTEXIMAGE3DMULTISAMPLEPROC greg_glTexImage3DMultisample;
extern PFNGLTEXPARAMETERIIVPROC greg_glTexParameterIiv;
extern PFNGLTEXPARAMETERIUIVPROC greg_glTexParameterIuiv;
extern PFNGLTEXPARAMETERFPROC greg_glTexParameterf;
extern PFNGLTEXPARAMETERFVPROC greg_glTexParameterfv;
extern PFNGLTEXPARAMETERIPROC greg_glTexParameteri;
extern PFNGLTEXPARAMETERIVPROC greg_glTexParameteriv;
extern PFNGLTEXSUBIMAGE1DPROC greg_glTexSubImage1D;
extern PFNGLTEXSUBIMAGE2DPROC greg_glTexSubImage2D;
extern PFNGLTEXSUBIMAGE3DPROC greg_glTexSubImage3D;
extern PFNGLTRANSFORMFEEDBACKVARYINGSPROC greg_glTransformFeedbackVaryings;
extern PFNGLTRANSLATEDPROC greg_glTranslated;
extern PFNGLTRANSLATEFPROC greg_glTranslatef;
extern PFNGLUNIFORM1FPROC greg_glUniform1f;
extern PFNGLUNIFORM1FVPROC greg_glUniform1fv;
extern PFNGLUNIFORM1IPROC greg_glUniform1i;
extern PFNGLUNIFORM1IVPROC greg_glUniform1iv;
extern PFNGLUNIFORM1UIPROC greg_glUniform1ui;
extern PFNGLUNIFORM1UIVPROC greg_glUniform1uiv;
extern PFNGLUNIFORM2FPROC greg_glUniform2f;
extern PFNGLUNIFORM2FVPROC greg_glUniform2fv;
extern PFNGLUNIFORM2IPROC greg_glUniform2i;
extern PFNGLUNIFORM2IVPROC greg_glUniform2iv;
extern PFNGLUNIFORM2UIPROC greg_glUniform2ui;
extern PFNGLUNIFORM2UIVPROC greg_glUniform2uiv;
extern PFNGLUNIFORM3FPROC greg_glUniform3f;
extern PFNGLUNIFORM3FVPROC greg_glUniform3fv;
extern PFNGLUNIFORM3IPROC greg_glUniform3i;
extern PFNGLUNIFORM3IVPROC greg_glUniform3iv;
extern PFNGLUNIFORM3UIPROC greg_glUniform3ui;
extern PFNGLUNIFORM3UIVPROC greg_glUniform3uiv;
extern PFNGLUNIFORM4FPROC greg_glUniform4f;
extern PFNGLUNIFORM4FVPROC greg_glUniform4fv;
extern PFNGLUNIFORM4IPROC greg_glUniform4i;
extern PFNGLUNIFORM4IVPROC greg_glUniform4iv;
extern PFNGLUNIFORM4UIPROC greg_glUniform4ui;
extern PFNGLUNIFORM4UIVPROC greg_glUniform4uiv;
extern PFNGLUNIFORMBLOCKBINDINGPROC greg_glUniformBlockBinding;
extern PFNGLUNIFORMMATRIX2FVPROC greg_glUniformMatrix2fv;
extern PFNGLUNIFORMMATRIX2X3FVPROC greg_glUniformMatrix2x3fv;
extern PFNGLUNIFORMMATRIX2X4FVPROC greg_glUniformMatrix2x4fv;
extern PFNGLUNIFORMMATRIX3FVPROC greg_glUniformMatrix3fv;
extern PFNGLUNIFORMMATRIX3X2FVPROC greg_glUniformMatrix3x2fv;
extern PFNGLUNIFORMMATRIX3X4FVPROC greg_glUniformMatrix3x4fv;
extern PFNGLUNIFORMMATRIX4FVPROC greg_glUniformMatrix4fv;
extern PFNGLUNIFORMMATRIX4X2FVPROC greg_glUniformMatrix4x2fv;
extern PFNGLUNIFORMMATRIX4X3FVPROC greg_glUniformMatrix4x3fv;
extern PFNGLUNMAPBUFFERPROC greg_glUnmapBuffer;
extern PFNGLUSEPROGRAMPROC greg_glUseProgram;
extern PFNGLVALIDATEPROGRAMPROC greg_glValidateProgram;
extern PFNGLVERTEX2DPROC greg_glVertex2d;
extern PFNGLVERTEX2DVPROC greg_glVertex2dv;
extern PFNGLVERTEX2FPROC greg_glVertex2f;
extern PFNGLVERTEX2FVPROC greg_glVertex2fv;
extern PFNGLVERTEX2IPROC greg_glVertex2i;
extern PFNGLVERTEX2IVPROC greg_glVertex2iv;
extern PFNGLVERTEX2SPROC greg_glVertex2s;
extern PFNGLVERTEX2SVPROC greg_glVertex2sv;
extern PFNGLVERTEX3DPROC greg_glVertex3d;
extern PFNGLVERTEX3DVPROC greg_glVertex3dv;
extern PFNGLVERTEX3FPROC greg_glVertex3f;
extern PFNGLVERTEX3FVPROC greg_glVertex3fv;
extern PFNGLVERTEX3IPROC greg_glVertex3i;
extern PFNGLVERTEX3IVPROC greg_glVertex3iv;
extern PFNGLVERTEX3SPROC greg_glVertex3s;
extern PFNGLVERTEX3SVPROC greg_glVertex3sv;
extern PFNGLVERTEX4DPROC greg_glVertex4d;
extern PFNGLVERTEX4DVPROC greg_glVertex4dv;
extern PFNGLVERTEX4FPROC greg_glVertex4f;
extern PFNGLVERTEX4FVPROC greg_glVertex4fv;
extern PFNGLVERTEX4IPROC greg_glVertex4i;
extern PFNGLVERTEX4IVPROC greg_glVertex4iv;
extern PFNGLVERTEX4SPROC greg_glVertex4s;
extern PFNGLVERTEX4SVPROC greg_glVertex4sv;
extern PFNGLVERTEXATTRIB1DPROC greg_glVertexAttrib1d;
extern PFNGLVERTEXATTRIB1DVPROC greg_glVertexAttrib1dv;
extern PFNGLVERTEXATTRIB1FPROC greg_glVertexAttrib1f;
extern PFNGLVERTEXATTRIB1FVPROC greg_glVertexAttrib1fv;
extern PFNGLVERTEXATTRIB1SPROC greg_glVertexAttrib1s;
extern PFNGLVERTEXATTRIB1SVPROC greg_glVertexAttrib1sv;
extern PFNGLVERTEXATTRIB2DPROC greg_glVertexAttrib2d;
extern PFNGLVERTEXATTRIB2DVPROC greg_glVertexAttrib2dv;
extern PFNGLVERTEXATTRIB2FPROC greg_glVertexAttrib2f;
extern PFNGLVERTEXATTRIB2FVPROC greg_glVertexAttrib2fv;
extern PFNGLVERTEXATTRIB2SPROC greg_glVertexAttrib2s;
extern PFNGLVERTEXATTRIB2SVPROC greg_glVertexAttrib2sv;
extern PFNGLVERTEXATTRIB3DPROC greg_glVertexAttrib3d;
extern PFNGLVERTEXATTRIB3DVPROC greg_glVertexAttrib3dv;
extern PFNGLVERTEXATTRIB3FPROC greg_glVertexAttrib3f;
extern PFNGLVERTEXATTRIB3FVPROC greg_glVertexAttrib3fv;
extern PFNGLVERTEXATTRIB3SPROC greg_glVertexAttrib3s;
extern PFNGLVERTEXATTRIB3SVPROC greg_glVertexAttrib3sv;
extern PFNGLVERTEXATTRIB4NBVPROC greg_glVertexAttrib4Nbv;
extern PFNGLVERTEXATTRIB4NIVPROC greg_glVertexAttrib4Niv;
extern PFNGLVERTEXATTRIB4NSVPROC greg_glVertexAttrib4Nsv;
extern PFNGLVERTEXATTRIB4NUBPROC greg_glVertexAttrib4Nub;
extern PFNGLVERTEXATTRIB4NUBVPROC greg_glVertexAttrib4Nubv;
extern PFNGLVERTEXATTRIB4NUIVPROC greg_glVertexAttrib4Nuiv;
extern PFNGLVERTEXATTRIB4NUSVPROC greg_glVertexAttrib4Nusv;
extern PFNGLVERTEXATTRIB4BVPROC greg_glVertexAttrib4bv;
extern PFNGLVERTEXATTRIB4DPROC greg_glVertexAttrib4d;
extern PFNGLVERTEXATTRIB4DVPROC greg_glVertexAttrib4dv;
extern PFNGLVERTEXATTRIB4FPROC greg_glVertexAttrib4f;
extern PFNGLVERTEXATTRIB4FVPROC greg_glVertexAttrib4fv;
extern PFNGLVERTEXATTRIB4IVPROC greg_glVertexAttrib4iv;
extern PFNGLVERTEXATTRIB4SPROC greg_glVertexAttrib4s;
extern PFNGLVERTEXATTRIB4SVPROC greg_glVertexAttrib4sv;
extern PFNGLVERTEXATTRIB4UBVPROC greg_glVertexAttrib4ubv;
extern PFNGLVERTEXATTRIB4UIVPROC greg_glVertexAttrib4uiv;
extern PFNGLVERTEXATTRIB4USVPROC greg_glVertexAttrib4usv;
extern PFNGLVERTEXATTRIBI1IPROC greg_glVertexAttribI1i;
extern PFNGLVERTEXATTRIBI1IVPROC greg_glVertexAttribI1iv;
extern PFNGLVERTEXATTRIBI1UIPROC greg_glVertexAttribI1ui;
extern PFNGLVERTEXATTRIBI1UIVPROC greg_glVertexAttribI1uiv;
extern PFNGLVERTEXATTRIBI2IPROC greg_glVertexAttribI2i;
extern PFNGLVERTEXATTRIBI2IVPROC greg_glVertexAttribI2iv;
extern PFNGLVERTEXATTRIBI2UIPROC greg_glVertexAttribI2ui;
extern PFNGLVERTEXATTRIBI2UIVPROC greg_glVertexAttribI2uiv;
extern PFNGLVERTEXATTRIBI3IPROC greg_glVertexAttribI3i;
extern PFNGLVERTEXATTRIBI3IVPROC greg_glVertexAttribI3iv;
extern PFNGLVERTEXATTRIBI3UIPROC greg_glVertexAttribI3ui;
extern PFNGLVERTEXATTRIBI3UIVPROC greg_glVertexAttribI3uiv;
extern PFNGLVERTEXATTRIBI4BVPROC greg_glVertexAttribI4bv;
extern PFNGLVERTEXATTRIBI4IPROC greg_glVertexAttribI4i;
extern PFNGLVERTEXATTRIBI4IVPROC greg_glVertexAttribI4iv;
extern PFNGLVERTEXATTRIBI4SVPROC greg_glVertexAttribI4sv;
extern PFNGLVERTEXATTRIBI4UBVPROC greg_glVertexAttribI4ubv;
extern PFNGLVERTEXATTRIBI4UIPROC greg_glVertexAttribI4ui;
extern PFNGLVERTEXATTRIBI4UIVPROC greg_glVertexAttribI4uiv;
extern PFNGLVERTEXATTRIBI4USVPROC greg_glVertexAttribI4usv;
extern PFNGLVERTEXATTRIBIPOINTERPROC greg_glVertexAttribIPointer;
extern PFNGLVERTEXATTRIBPOINTERPROC greg_glVertexAttribPointer;
extern PFNGLVERTEXPOINTERPROC greg_glVertexPointer;
extern PFNGLVIEWPORTPROC greg_glViewport;
extern PFNGLWAITSYNCPROC greg_glWaitSync;
extern PFNGLWINDOWPOS2DPROC greg_glWindowPos2d;
extern PFNGLWINDOWPOS2DVPROC greg_glWindowPos2dv;
extern PFNGLWINDOWPOS2FPROC greg_glWindowPos2f;
extern PFNGLWINDOWPOS2FVPROC greg_glWindowPos2fv;
extern PFNGLWINDOWPOS2IPROC greg_glWindowPos2i;
extern PFNGLWINDOWPOS2IVPROC greg_glWindowPos2iv;
extern PFNGLWINDOWPOS2SPROC greg_glWindowPos2s;
extern PFNGLWINDOWPOS2SVPROC greg_glWindowPos2sv;
extern PFNGLWINDOWPOS3DPROC greg_glWindowPos3d;
extern PFNGLWINDOWPOS3DVPROC greg_glWindowPos3dv;
extern PFNGLWINDOWPOS3FPROC greg_glWindowPos3f;
extern PFNGLWINDOWPOS3FVPROC greg_glWindowPos3fv;
extern PFNGLWINDOWPOS3IPROC greg_glWindowPos3i;
extern PFNGLWINDOWPOS3IVPROC greg_glWindowPos3iv;
extern PFNGLWINDOWPOS3SPROC greg_glWindowPos3s;
extern PFNGLWINDOWPOS3SVPROC greg_glWindowPos3sv;

#define glAccum greg_glAccum
#define glActiveTexture greg_glActiveTexture
#define glAlphaFunc greg_glAlphaFunc
#define glAreTexturesResident greg_glAreTexturesResident
#define glArrayElement greg_glArrayElement
#define glAttachShader greg_glAttachShader
#define glBegin greg_glBegin
#define glBeginConditionalRender greg_glBeginConditionalRender
#define glBeginQuery greg_glBeginQuery
#define glBeginTransformFeedback greg_glBeginTransformFeedback
#define glBindAttribLocation greg_glBindAttribLocation
#define glBindBuffer greg_glBindBuffer
#define glBindBufferBase greg_glBindBufferBase
#define glBindBufferRange greg_glBindBufferRange
#define glBindFragDataLocation greg_glBindFragDataLocation
#define glBindFramebuffer greg_glBindFramebuffer
#define glBindRenderbuffer greg_glBindRenderbuffer
#define glBindTexture greg_glBindTexture
#define glBindVertexArray greg_glBindVertexArray
#define glBitmap greg_glBitmap
#define glBlendColor greg_glBlendColor
#define glBlendEquation greg_glBlendEquation
#define glBlendEquationSeparate greg_glBlendEquationSeparate
#define glBlendFunc greg_glBlendFunc
#define glBlendFuncSeparate greg_glBlendFuncSeparate
#define glBlitFramebuffer greg_glBlitFramebuffer
#define glBufferData greg_glBufferData
#define glBufferSubData greg_glBufferSubData
#define glCallList greg_glCallList
#define glCallLists greg_glCallLists
#define glCheckFramebufferStatus greg_glCheckFramebufferStatus
#define glClampColor greg_glClampColor
#define glClear greg_glClear
#define glClearAccum greg_glClearAccum
#define glClearBufferfi greg_glClearBufferfi
#define glClearBufferfv greg_glClearBufferfv
#define glClearBufferiv greg_glClearBufferiv
#define glClearBufferuiv greg_glClearBufferuiv
#define glClearColor greg_glClearColor
#define glClearDepth greg_glClearDepth
#define glClearIndex greg_glClearIndex
#define glClearStencil greg_glClearStencil
#define glClientActiveTexture greg_glClientActiveTexture
#define glClientWaitSync greg_glClientWaitSync
#define glClipPlane greg_glClipPlane
#define glColor3b greg_glColor3b
#define glColor3bv greg_glColor3bv
#define glColor3d greg_glColor3d
#define glColor3dv greg_glColor3dv
#define glColor3f greg_glColor3f
#define glColor3fv greg_glColor3fv
#define glColor3i greg_glColor3i
#define glColor3iv greg_glColor3iv
#define glColor3s greg_glColor3s
#define glColor3sv greg_glColor3sv
#define glColor3ub greg_glColor3ub
#define glColor3ubv greg_glColor3ubv
#define glColor3ui greg_glColor3ui
#define glColor3uiv greg_glColor3uiv
#define glColor3us greg_glColor3us
#define glColor3usv greg_glColor3usv
#define glColor4b greg_glColor4b
#define glColor4bv greg_glColor4bv
#define glColor4d greg_glColor4d
#define glColor4dv greg_glColor4dv
#define glColor4f greg_glColor4f
#define glColor4fv greg_glColor4fv
#define glColor4i greg_glColor4i
#define glColor4iv greg_glColor4iv
#define glColor4s greg_glColor4s
#define glColor4sv greg_glColor4sv
#define glColor4ub greg_glColor4ub
#define glColor4ubv greg_glColor4ubv
#define glColor4ui greg_glColor4ui
#define glColor4uiv greg_glColor4uiv
#define glColor4us greg_glColor4us
#define glColor4usv greg_glColor4usv
#define glColorMask greg_glColorMask
#define glColorMaski greg_glColorMaski
#define glColorMaterial greg_glColorMaterial
#define glColorPointer greg_glColorPointer
#define glCompileShader greg_glCompileShader
#define glCompressedTexImage1D greg_glCompressedTexImage1D
#define glCompressedTexImage2D greg_glCompressedTexImage2D
#define glCompressedTexImage3D greg_glCompressedTexImage3D
#define glCompressedTexSubImage1D greg_glCompressedTexSubImage1D
#define glCompressedTexSubImage2D greg_glCompressedTexSubImage2D
#define glCompressedTexSubImage3D greg_glCompressedTexSubImage3D
#define glCopyBufferSubData greg_glCopyBufferSubData
#define glCopyPixels greg_glCopyPixels
#define glCopyTexImage1D greg_glCopyTexImage1D
#define glCopyTexImage2D greg_glCopyTexImage2D
#define glCopyTexSubImage1D greg_glCopyTexSubImage1D
#define glCopyTexSubImage2D greg_glCopyTexSubImage2D
#define glCopyTexSubImage3D greg_glCopyTexSubImage3D
#define glCreateProgram greg_glCreateProgram
#define glCreateShader greg_glCreateShader
#define glCullFace greg_glCullFace
#define glDebugMessageCallbackARB greg_glDebugMessageCallbackARB
#define glDebugMessageControlARB greg_glDebugMessageControlARB
#define glDebugMessageInsertARB greg_glDebugMessageInsertARB
#define glDeleteBuffers greg_glDeleteBuffers
#define glDeleteFramebuffers greg_glDeleteFramebuffers
#define glDeleteLists greg_glDeleteLists
#define glDeleteProgram greg_glDeleteProgram
#define glDeleteQueries greg_glDeleteQueries
#define glDeleteRenderbuffers greg_glDeleteRenderbuffers
#define glDeleteShader greg_glDeleteShader
#define glDeleteSync greg_glDeleteSync
#define glDeleteTextures greg_glDeleteTextures
#define glDeleteVertexArrays greg_glDeleteVertexArrays
#define glDepthFunc greg_glDepthFunc
#define glDepthMask greg_glDepthMask
#define glDepthRange greg_glDepthRange
#define glDetachShader greg_glDetachShader
#define glDisable greg_glDisable
#define glDisableClientState greg_glDisableClientState
#define glDisableVertexAttribArray greg_glDisableVertexAttribArray
#define glDisablei greg_glDisablei
#define glDrawArrays greg_glDrawArrays
#define glDrawArraysInstanced greg_glDrawArraysInstanced
#define glDrawBuffer greg_glDrawBuffer
#define glDrawBuffers greg_glDrawBuffers
#define glDrawElements greg_glDrawElements
#define glDrawElementsBaseVertex greg_glDrawElementsBaseVertex
#define glDrawElementsInstanced greg_glDrawElementsInstanced
#define glDrawElementsInstancedBaseVertex greg_glDrawElementsInstancedBaseVertex
#define glDrawPixels greg_glDrawPixels
#define glDrawRangeElements greg_glDrawRangeElements
#define glDrawRangeElementsBaseVertex greg_glDrawRangeElementsBaseVertex
#define glEdgeFlag greg_glEdgeFlag
#define glEdgeFlagPointer greg_glEdgeFlagPointer
#define glEdgeFlagv greg_glEdgeFlagv
#define glEnable greg_glEnable
#define glEnableClientState greg_glEnableClientState
#define glEnableVertexAttribArray greg_glEnableVertexAttribArray
#define glEnablei greg_glEnablei
#define glEnd greg_glEnd
#define glEndConditionalRender greg_glEndConditionalRender
#define glEndList greg_glEndList
#define glEndQuery greg_glEndQuery
#define glEndTransformFeedback greg_glEndTransformFeedback
#define glEvalCoord1d greg_glEvalCoord1d
#define glEvalCoord1dv greg_glEvalCoord1dv
#define glEvalCoord1f greg_glEvalCoord1f
#define glEvalCoord1fv greg_glEvalCoord1fv
#define glEvalCoord2d greg_glEvalCoord2d
#define glEvalCoord2dv greg_glEvalCoord2dv
#define glEvalCoord2f greg_glEvalCoord2f
#define glEvalCoord2fv greg_glEvalCoord2fv
#define glEvalMesh1 greg_glEvalMesh1
#define glEvalMesh2 greg_glEvalMesh2
#define glEvalPoint1 greg_glEvalPoint1
#define glEvalPoint2 greg_glEvalPoint2
#define glFeedbackBuffer greg_glFeedbackBuffer
#define glFenceSync greg_glFenceSync
#define glFinish greg_glFinish
#define glFlush greg_glFlush
#define glFlushMappedBufferRange greg_glFlushMappedBufferRange
#define glFogCoordPointer greg_glFogCoordPointer
#define glFogCoordd greg_glFogCoordd
#define glFogCoorddv greg_glFogCoorddv
#define glFogCoordf greg_glFogCoordf
#define glFogCoordfv greg_glFogCoordfv
#define glFogf greg_glFogf
#define glFogfv greg_glFogfv
#define glFogi greg_glFogi
#define glFogiv greg_glFogiv
#define glFramebufferRenderbuffer greg_glFramebufferRenderbuffer
#define glFramebufferTexture greg_glFramebufferTexture
#define glFramebufferTexture1D greg_glFramebufferTexture1D
#define glFramebufferTexture2D greg_glFramebufferTexture2D
#define glFramebufferTexture3D greg_glFramebufferTexture3D
#define glFramebufferTextureLayer greg_glFramebufferTextureLayer
#define glFrontFace greg_glFrontFace
#define glFrustum greg_glFrustum
#define glGenBuffers greg_glGenBuffers
#define glGenFramebuffers greg_glGenFramebuffers
#define glGenLists greg_glGenLists
#define glGenQueries greg_glGenQueries
#define glGenRenderbuffers greg_glGenRenderbuffers
#define glGenTextures greg_glGenTextures
#define glGenVertexArrays greg_glGenVertexArrays
#define glGenerateMipmap greg_glGenerateMipmap
#define glGetActiveAttrib greg_glGetActiveAttrib
#define glGetActiveUniform greg_glGetActiveUniform
#define glGetActiveUniformBlockName greg_glGetActiveUniformBlockName
#define glGetActiveUniformBlockiv greg_glGetActiveUniformBlockiv
#define glGetActiveUniformName greg_glGetActiveUniformName
#define glGetActiveUniformsiv greg_glGetActiveUniformsiv
#define glGetAttachedShaders greg_glGetAttachedShaders
#define glGetAttribLocation greg_glGetAttribLocation
#define glGetBooleani_v greg_glGetBooleani_v
#define glGetBooleanv greg_glGetBooleanv
#define glGetBufferParameteri64v greg_glGetBufferParameteri64v
#define glGetBufferParameteriv greg_glGetBufferParameteriv
#define glGetBufferPointerv greg_glGetBufferPointerv
#define glGetBufferSubData greg_glGetBufferSubData
#define glGetClipPlane greg_glGetClipPlane
#define glGetCompressedTexImage greg_glGetCompressedTexImage
#define glGetDebugMessageLogARB greg_glGetDebugMessageLogARB
#define glGetDoublev greg_glGetDoublev
#define glGetError greg_glGetError
#define glGetFloatv greg_glGetFloatv
#define glGetFragDataLocation greg_glGetFragDataLocation
#define glGetFramebufferAttachmentParameteriv greg_glGetFramebufferAttachmentParameteriv
#define glGetInteger64i_v greg_glGetInteger64i_v
#define glGetInteger64v greg_glGetInteger64v
#define glGetIntegeri_v greg_glGetIntegeri_v
#define glGetIntegerv greg_glGetIntegerv
#define glGetLightfv greg_glGetLightfv
#define glGetLightiv greg_glGetLightiv
#define glGetMapdv greg_glGetMapdv
#define glGetMapfv greg_glGetMapfv
#define glGetMapiv greg_glGetMapiv
#define glGetMaterialfv greg_glGetMaterialfv
#define glGetMaterialiv greg_glGetMaterialiv
#define glGetMultisamplefv greg_glGetMultisamplefv
#define glGetPixelMapfv greg_glGetPixelMapfv
#define glGetPixelMapuiv greg_glGetPixelMapuiv
#define glGetPixelMapusv greg_glGetPixelMapusv
#define glGetPointerv greg_glGetPointerv
#define glGetPolygonStipple greg_glGetPolygonStipple
#define glGetProgramInfoLog greg_glGetProgramInfoLog
#define glGetProgramiv greg_glGetProgramiv
#define glGetQueryObjectiv greg_glGetQueryObjectiv
#define glGetQueryObjectuiv greg_glGetQueryObjectuiv
#define glGetQueryiv greg_glGetQueryiv
#define glGetRenderbufferParameteriv greg_glGetRenderbufferParameteriv
#define glGetShaderInfoLog greg_glGetShaderInfoLog
#define glGetShaderSource greg_glGetShaderSource
#define glGetShaderiv greg_glGetShaderiv
#define glGetString greg_glGetString
#define glGetStringi greg_glGetStringi
#define glGetSynciv greg_glGetSynciv
#define glGetTexEnvfv greg_glGetTexEnvfv
#define glGetTexEnviv greg_glGetTexEnviv
#define glGetTexGendv greg_glGetTexGendv
#define glGetTexGenfv greg_glGetTexGenfv
#define glGetTexGeniv greg_glGetTexGeniv
#define glGetTexImage greg_glGetTexImage
#define glGetTexLevelParameterfv greg_glGetTexLevelParameterfv
#define glGetTexLevelParameteriv greg_glGetTexLevelParameteriv
#define glGetTexParameterIiv greg_glGetTexParameterIiv
#define glGetTexParameterIuiv greg_glGetTexParameterIuiv
#define glGetTexParameterfv greg_glGetTexParameterfv
#define glGetTexParameteriv greg_glGetTexParameteriv
#define glGetTransformFeedbackVarying greg_glGetTransformFeedbackVarying
#define glGetUniformBlockIndex greg_glGetUniformBlockIndex
#define glGetUniformIndices greg_glGetUniformIndices
#define glGetUniformLocation greg_glGetUniformLocation
#define glGetUniformfv greg_glGetUniformfv
#define glGetUniformiv greg_glGetUniformiv
#define glGetUniformuiv greg_glGetUniformuiv
#define glGetVertexAttribIiv greg_glGetVertexAttribIiv
#define glGetVertexAttribIuiv greg_glGetVertexAttribIuiv
#define glGetVertexAttribPointerv greg_glGetVertexAttribPointerv
#define glGetVertexAttribdv greg_glGetVertexAttribdv
#define glGetVertexAttribfv greg_glGetVertexAttribfv
#define glGetVertexAttribiv greg_glGetVertexAttribiv
#define glHint greg_glHint
#define glIndexMask greg_glIndexMask
#define glIndexPointer greg_glIndexPointer
#define glIndexd greg_glIndexd
#define glIndexdv greg_glIndexdv
#define glIndexf greg_glIndexf
#define glIndexfv greg_glIndexfv
#define glIndexi greg_glIndexi
#define glIndexiv greg_glIndexiv
#define glIndexs greg_glIndexs
#define glIndexsv greg_glIndexsv
#define glIndexub greg_glIndexub
#define glIndexubv greg_glIndexubv
#define glInitNames greg_glInitNames
#define glInterleavedArrays greg_glInterleavedArrays
#define glIsBuffer greg_glIsBuffer
#define glIsEnabled greg_glIsEnabled
#define glIsEnabledi greg_glIsEnabledi
#define glIsFramebuffer greg_glIsFramebuffer
#define glIsList greg_glIsList
#define glIsProgram greg_glIsProgram
#define glIsQuery greg_glIsQuery
#define glIsRenderbuffer greg_glIsRenderbuffer
#define glIsShader greg_glIsShader
#define glIsSync greg_glIsSync
#define glIsTexture greg_glIsTexture
#define glIsVertexArray greg_glIsVertexArray
#define glLightModelf greg_glLightModelf
#define glLightModelfv greg_glLightModelfv
#define glLightModeli greg_glLightModeli
#define glLightModeliv greg_glLightModeliv
#define glLightf greg_glLightf
#define glLightfv greg_glLightfv
#define glLighti greg_glLighti
#define glLightiv greg_glLightiv
#define glLineStipple greg_glLineStipple
#define glLineWidth greg_glLineWidth
#define glLinkProgram greg_glLinkProgram
#define glListBase greg_glListBase
#define glLoadIdentity greg_glLoadIdentity
#define glLoadMatrixd greg_glLoadMatrixd
#define glLoadMatrixf greg_glLoadMatrixf
#define glLoadName greg_glLoadName
#define glLoadTransposeMatrixd greg_glLoadTransposeMatrixd
#define glLoadTransposeMatrixf greg_glLoadTransposeMatrixf
#define glLogicOp greg_glLogicOp
#define glMap1d greg_glMap1d
#define glMap1f greg_glMap1f
#define glMap2d greg_glMap2d
#define glMap2f greg_glMap2f
#define glMapBuffer greg_glMapBuffer
#define glMapBufferRange greg_glMapBufferRange
#define glMapGrid1d greg_glMapGrid1d
#define glMapGrid1f greg_glMapGrid1f
#define glMapGrid2d greg_glMapGrid2d
#define glMapGrid2f greg_glMapGrid2f
#define glMaterialf greg_glMaterialf
#define glMaterialfv greg_glMaterialfv
#define glMateriali greg_glMateriali
#define glMaterialiv greg_glMaterialiv
#define glMatrixMode greg_glMatrixMode
#define glMultMatrixd greg_glMultMatrixd
#define glMultMatrixf greg_glMultMatrixf
#define glMultTransposeMatrixd greg_glMultTransposeMatrixd
#define glMultTransposeMatrixf greg_glMultTransposeMatrixf
#define glMultiDrawArrays greg_glMultiDrawArrays
#define glMultiDrawElements greg_glMultiDrawElements
#define glMultiDrawElementsBaseVertex greg_glMultiDrawElementsBaseVertex
#define glMultiTexCoord1d greg_glMultiTexCoord1d
#define glMultiTexCoord1dv greg_glMultiTexCoord1dv
#define glMultiTexCoord1f greg_glMultiTexCoord1f
#define glMultiTexCoord1fv greg_glMultiTexCoord1fv
#define glMultiTexCoord1i greg_glMultiTexCoord1i
#define glMultiTexCoord1iv greg_glMultiTexCoord1iv
#define glMultiTexCoord1s greg_glMultiTexCoord1s
#define glMultiTexCoord1sv greg_glMultiTexCoord1sv
#define glMultiTexCoord2d greg_glMultiTexCoord2d
#define glMultiTexCoord2dv greg_glMultiTexCoord2dv
#define glMultiTexCoord2f greg_glMultiTexCoord2f
#define glMultiTexCoord2fv greg_glMultiTexCoord2fv
#define glMultiTexCoord2i greg_glMultiTexCoord2i
#define glMultiTexCoord2iv greg_glMultiTexCoord2iv
#define glMultiTexCoord2s greg_glMultiTexCoord2s
#define glMultiTexCoord2sv greg_glMultiTexCoord2sv
#define glMultiTexCoord3d greg_glMultiTexCoord3d
#define glMultiTexCoord3dv greg_glMultiTexCoord3dv
#define glMultiTexCoord3f greg_glMultiTexCoord3f
#define glMultiTexCoord3fv greg_glMultiTexCoord3fv
#define glMultiTexCoord3i greg_glMultiTexCoord3i
#define glMultiTexCoord3iv greg_glMultiTexCoord3iv
#define glMultiTexCoord3s greg_glMultiTexCoord3s
#define glMultiTexCoord3sv greg_glMultiTexCoord3sv
#define glMultiTexCoord4d greg_glMultiTexCoord4d
#define glMultiTexCoord4dv greg_glMultiTexCoord4dv
#define glMultiTexCoord4f greg_glMultiTexCoord4f
#define glMultiTexCoord4fv greg_glMultiTexCoord4fv
#define glMultiTexCoord4i greg_glMultiTexCoord4i
#define glMultiTexCoord4iv greg_glMultiTexCoord4iv
#define glMultiTexCoord4s greg_glMultiTexCoord4s
#define glMultiTexCoord4sv greg_glMultiTexCoord4sv
#define glNewList greg_glNewList
#define glNormal3b greg_glNormal3b
#define glNormal3bv greg_glNormal3bv
#define glNormal3d greg_glNormal3d
#define glNormal3dv greg_glNormal3dv
#define glNormal3f greg_glNormal3f
#define glNormal3fv greg_glNormal3fv
#define glNormal3i greg_glNormal3i
#define glNormal3iv greg_glNormal3iv
#define glNormal3s greg_glNormal3s
#define glNormal3sv greg_glNormal3sv
#define glNormalPointer greg_glNormalPointer
#define glOrtho greg_glOrtho
#define glPassThrough greg_glPassThrough
#define glPixelMapfv greg_glPixelMapfv
#define glPixelMapuiv greg_glPixelMapuiv
#define glPixelMapusv greg_glPixelMapusv
#define glPixelStoref greg_glPixelStoref
#define glPixelStorei greg_glPixelStorei
#define glPixelTransferf greg_glPixelTransferf
#define glPixelTransferi greg_glPixelTransferi
#define glPixelZoom greg_glPixelZoom
#define glPointParameterf greg_glPointParameterf
#define glPointParameterfv greg_glPointParameterfv
#define glPointParameteri greg_glPointParameteri
#define glPointParameteriv greg_glPointParameteriv
#define glPointSize greg_glPointSize
#define glPolygonMode greg_glPolygonMode
#define glPolygonOffset greg_glPolygonOffset
#define glPolygonStipple greg_glPolygonStipple
#define glPopAttrib greg_glPopAttrib
#define glPopClientAttrib greg_glPopClientAttrib
#define glPopMatrix greg_glPopMatrix
#define glPopName greg_glPopName
#define glPrimitiveRestartIndex greg_glPrimitiveRestartIndex
#define glPrioritizeTextures greg_glPrioritizeTextures
#define glProvokingVertex greg_glProvokingVertex
#define glPushAttrib greg_glPushAttrib
#define glPushClientAttrib greg_glPushClientAttrib
#define glPushMatrix greg_glPushMatrix
#define glPushName greg_glPushName
#define glRasterPos2d greg_glRasterPos2d
#define glRasterPos2dv greg_glRasterPos2dv
#define glRasterPos2f greg_glRasterPos2f
#define glRasterPos2fv greg_glRasterPos2fv
#define glRasterPos2i greg_glRasterPos2i
#define glRasterPos2iv greg_glRasterPos2iv
#define glRasterPos2s greg_glRasterPos2s
#define glRasterPos2sv greg_glRasterPos2sv
#define glRasterPos3d greg_glRasterPos3d
#define glRasterPos3dv greg_glRasterPos3dv
#define glRasterPos3f greg_glRasterPos3f
#define glRasterPos3fv greg_glRasterPos3fv
#define glRasterPos3i greg_glRasterPos3i
#define glRasterPos3iv greg_glRasterPos3iv
#define glRasterPos3s greg_glRasterPos3s
#define glRasterPos3sv greg_glRasterPos3sv
#define glRasterPos4d greg_glRasterPos4d
#define glRasterPos4dv greg_glRasterPos4dv
#define glRasterPos4f greg_glRasterPos4f
#define glRasterPos4fv greg_glRasterPos4fv
#define glRasterPos4i greg_glRasterPos4i
#define glRasterPos4iv greg_glRasterPos4iv
#define glRasterPos4s greg_glRasterPos4s
#define glRasterPos4sv greg_glRasterPos4sv
#define glReadBuffer greg_glReadBuffer
#define glReadPixels greg_glReadPixels
#define glRectd greg_glRectd
#define glRectdv greg_glRectdv
#define glRectf greg_glRectf
#define glRectfv greg_glRectfv
#define glRecti greg_glRecti
#define glRectiv greg_glRectiv
#define glRects greg_glRects
#define glRectsv greg_glRectsv
#define glRenderMode greg_glRenderMode
#define glRenderbufferStorage greg_glRenderbufferStorage
#define glRenderbufferStorageMultisample greg_glRenderbufferStorageMultisample
#define glRotated greg_glRotated
#define glRotatef greg_glRotatef
#define glSampleCoverage greg_glSampleCoverage
#define glSampleMaski greg_glSampleMaski
#define glScaled greg_glScaled
#define glScalef greg_glScalef
#define glScissor greg_glScissor
#define glSecondaryColor3b greg_glSecondaryColor3b
#define glSecondaryColor3bv greg_glSecondaryColor3bv
#define glSecondaryColor3d greg_glSecondaryColor3d
#define glSecondaryColor3dv greg_glSecondaryColor3dv
#define glSecondaryColor3f greg_glSecondaryColor3f
#define glSecondaryColor3fv greg_glSecondaryColor3fv
#define glSecondaryColor3i greg_glSecondaryColor3i
#define glSecondaryColor3iv greg_glSecondaryColor3iv
#define glSecondaryColor3s greg_glSecondaryColor3s
#define glSecondaryColor3sv greg_glSecondaryColor3sv
#define glSecondaryColor3ub greg_glSecondaryColor3ub
#define glSecondaryColor3ubv greg_glSecondaryColor3ubv
#define glSecondaryColor3ui greg_glSecondaryColor3ui
#define glSecondaryColor3uiv greg_glSecondaryColor3uiv
#define glSecondaryColor3us greg_glSecondaryColor3us
#define glSecondaryColor3usv greg_glSecondaryColor3usv
#define glSecondaryColorPointer greg_glSecondaryColorPointer
#define glSelectBuffer greg_glSelectBuffer
#define glShadeModel greg_glShadeModel
#define glShaderSource greg_glShaderSource
#define glStencilFunc greg_glStencilFunc
#define glStencilFuncSeparate greg_glStencilFuncSeparate
#define glStencilMask greg_glStencilMask
#define glStencilMaskSeparate greg_glStencilMaskSeparate
#define glStencilOp greg_glStencilOp
#define glStencilOpSeparate greg_glStencilOpSeparate
#define glTexBuffer greg_glTexBuffer
#define glTexCoord1d greg_glTexCoord1d
#define glTexCoord1dv greg_glTexCoord1dv
#define glTexCoord1f greg_glTexCoord1f
#define glTexCoord1fv greg_glTexCoord1fv
#define glTexCoord1i greg_glTexCoord1i
#define glTexCoord1iv greg_glTexCoord1iv
#define glTexCoord1s greg_glTexCoord1s
#define glTexCoord1sv greg_glTexCoord1sv
#define glTexCoord2d greg_glTexCoord2d
#define glTexCoord2dv greg_glTexCoord2dv
#define glTexCoord2f greg_glTexCoord2f
#define glTexCoord2fv greg_glTexCoord2fv
#define glTexCoord2i greg_glTexCoord2i
#define glTexCoord2iv greg_glTexCoord2iv
#define glTexCoord2s greg_glTexCoord2s
#define glTexCoord2sv greg_glTexCoord2sv
#define glTexCoord3d greg_glTexCoord3d
#define glTexCoord3dv greg_glTexCoord3dv
#define glTexCoord3f greg_glTexCoord3f
#define glTexCoord3fv greg_glTexCoord3fv
#define glTexCoord3i greg_glTexCoord3i
#define glTexCoord3iv greg_glTexCoord3iv
#define glTexCoord3s greg_glTexCoord3s
#define glTexCoord3sv greg_glTexCoord3sv
#define glTexCoord4d greg_glTexCoord4d
#define glTexCoord4dv greg_glTexCoord4dv
#define glTexCoord4f greg_glTexCoord4f
#define glTexCoord4fv greg_glTexCoord4fv
#define glTexCoord4i greg_glTexCoord4i
#define glTexCoord4iv greg_glTexCoord4iv
#define glTexCoord4s greg_glTexCoord4s
#define glTexCoord4sv greg_glTexCoord4sv
#define glTexCoordPointer greg_glTexCoordPointer
#define glTexEnvf greg_glTexEnvf
#define glTexEnvfv greg_glTexEnvfv
#define glTexEnvi greg_glTexEnvi
#define glTexEnviv greg_glTexEnviv
#define glTexGend greg_glTexGend
#define glTexGendv greg_glTexGendv
#define glTexGenf greg_glTexGenf
#define glTexGenfv greg_glTexGenfv
#define glTexGeni greg_glTexGeni
#define glTexGeniv greg_glTexGeniv
#define glTexImage1D greg_glTexImage1D
#define glTexImage2D greg_glTexImage2D
#define glTexImage2DMultisample greg_glTexImage2DMultisample
#define glTexImage3D greg_glTexImage3D
#define glTexImage3DMultisample greg_glTexImage3DMultisample
#define glTexParameterIiv greg_glTexParameterIiv
#define glTexParameterIuiv greg_glTexParameterIuiv
#define glTexParameterf greg_glTexParameterf
#define glTexParameterfv greg_glTexParameterfv
#define glTexParameteri greg_glTexParameteri
#define glTexParameteriv greg_glTexParameteriv
#define glTexSubImage1D greg_glTexSubImage1D
#define glTexSubImage2D greg_glTexSubImage2D
#define glTexSubImage3D greg_glTexSubImage3D
#define glTransformFeedbackVaryings greg_glTransformFeedbackVaryings
#define glTranslated greg_glTranslated
#define glTranslatef greg_glTranslatef
#define glUniform1f greg_glUniform1f
#define glUniform1fv greg_glUniform1fv
#define glUniform1i greg_glUniform1i
#define glUniform1iv greg_glUniform1iv
#define glUniform1ui greg_glUniform1ui
#define glUniform1uiv greg_glUniform1uiv
#define glUniform2f greg_glUniform2f
#define glUniform2fv greg_glUniform2fv
#define glUniform2i greg_glUniform2i
#define glUniform2iv greg_glUniform2iv
#define glUniform2ui greg_glUniform2ui
#define glUniform2uiv greg_glUniform2uiv
#define glUniform3f greg_glUniform3f
#define glUniform3fv greg_glUniform3fv
#define glUniform3i greg_glUniform3i
#define glUniform3iv greg_glUniform3iv
#define glUniform3ui greg_glUniform3ui
#define glUniform3uiv greg_glUniform3uiv
#define glUniform4f greg_glUniform4f
#define glUniform4fv greg_glUniform4fv
#define glUniform4i greg_glUniform4i
#define glUniform4iv greg_glUniform4iv
#define glUniform4ui greg_glUniform4ui
#define glUniform4uiv greg_glUniform4uiv
#define glUniformBlockBinding greg_glUniformBlockBinding
#define glUniformMatrix2fv greg_glUniformMatrix2fv
#define glUniformMatrix2x3fv greg_glUniformMatrix2x3fv
#define glUniformMatrix2x4fv greg_glUniformMatrix2x4fv
#define glUniformMatrix3fv greg_glUniformMatrix3fv
#define glUniformMatrix3x2fv greg_glUniformMatrix3x2fv
#define glUniformMatrix3x4fv greg_glUniformMatrix3x4fv
#define glUniformMatrix4fv greg_glUniformMatrix4fv
#define glUniformMatrix4x2fv greg_glUniformMatrix4x2fv
#define glUniformMatrix4x3fv greg_glUniformMatrix4x3fv
#define glUnmapBuffer greg_glUnmapBuffer
#define glUseProgram greg_glUseProgram
#define glValidateProgram greg_glValidateProgram
#define glVertex2d greg_glVertex2d
#define glVertex2dv greg_glVertex2dv
#define glVertex2f greg_glVertex2f
#define glVertex2fv greg_glVertex2fv
#define glVertex2i greg_glVertex2i
#define glVertex2iv greg_glVertex2iv
#define glVertex2s greg_glVertex2s
#define glVertex2sv greg_glVertex2sv
#define glVertex3d greg_glVertex3d
#define glVertex3dv greg_glVertex3dv
#define glVertex3f greg_glVertex3f
#define glVertex3fv greg_glVertex3fv
#define glVertex3i greg_glVertex3i
#define glVertex3iv greg_glVertex3iv
#define glVertex3s greg_glVertex3s
#define glVertex3sv greg_glVertex3sv
#define glVertex4d greg_glVertex4d
#define glVertex4dv greg_glVertex4dv
#define glVertex4f greg_glVertex4f
#define glVertex4fv greg_glVertex4fv
#define glVertex4i greg_glVertex4i
#define glVertex4iv greg_glVertex4iv
#define glVertex4s greg_glVertex4s
#define glVertex4sv greg_glVertex4sv
#define glVertexAttrib1d greg_glVertexAttrib1d
#define glVertexAttrib1dv greg_glVertexAttrib1dv
#define glVertexAttrib1f greg_glVertexAttrib1f
#define glVertexAttrib1fv greg_glVertexAttrib1fv
#define glVertexAttrib1s greg_glVertexAttrib1s
#define glVertexAttrib1sv greg_glVertexAttrib1sv
#define glVertexAttrib2d greg_glVertexAttrib2d
#define glVertexAttrib2dv greg_glVertexAttrib2dv
#define glVertexAttrib2f greg_glVertexAttrib2f
#define glVertexAttrib2fv greg_glVertexAttrib2fv
#define glVertexAttrib2s greg_glVertexAttrib2s
#define glVertexAttrib2sv greg_glVertexAttrib2sv
#define glVertexAttrib3d greg_glVertexAttrib3d
#define glVertexAttrib3dv greg_glVertexAttrib3dv
#define glVertexAttrib3f greg_glVertexAttrib3f
#define glVertexAttrib3fv greg_glVertexAttrib3fv
#define glVertexAttrib3s greg_glVertexAttrib3s
#define glVertexAttrib3sv greg_glVertexAttrib3sv
#define glVertexAttrib4Nbv greg_glVertexAttrib4Nbv
#define glVertexAttrib4Niv greg_glVertexAttrib4Niv
#define glVertexAttrib4Nsv greg_glVertexAttrib4Nsv
#define glVertexAttrib4Nub greg_glVertexAttrib4Nub
#define glVertexAttrib4Nubv greg_glVertexAttrib4Nubv
#define glVertexAttrib4Nuiv greg_glVertexAttrib4Nuiv
#define glVertexAttrib4Nusv greg_glVertexAttrib4Nusv
#define glVertexAttrib4bv greg_glVertexAttrib4bv
#define glVertexAttrib4d greg_glVertexAttrib4d
#define glVertexAttrib4dv greg_glVertexAttrib4dv
#define glVertexAttrib4f greg_glVertexAttrib4f
#define glVertexAttrib4fv greg_glVertexAttrib4fv
#define glVertexAttrib4iv greg_glVertexAttrib4iv
#define glVertexAttrib4s greg_glVertexAttrib4s
#define glVertexAttrib4sv greg_glVertexAttrib4sv
#define glVertexAttrib4ubv greg_glVertexAttrib4ubv
#define glVertexAttrib4uiv greg_glVertexAttrib4uiv
#define glVertexAttrib4usv greg_glVertexAttrib4usv
#define glVertexAttribI1i greg_glVertexAttribI1i
#define glVertexAttribI1iv greg_glVertexAttribI1iv
#define glVertexAttribI1ui greg_glVertexAttribI1ui
#define glVertexAttribI1uiv greg_glVertexAttribI1uiv
#define glVertexAttribI2i greg_glVertexAttribI2i
#define glVertexAttribI2iv greg_glVertexAttribI2iv
#define glVertexAttribI2ui greg_glVertexAttribI2ui
#define glVertexAttribI2uiv greg_glVertexAttribI2uiv
#define glVertexAttribI3i greg_glVertexAttribI3i
#define glVertexAttribI3iv greg_glVertexAttribI3iv
#define glVertexAttribI3ui greg_glVertexAttribI3ui
#define glVertexAttribI3uiv greg_glVertexAttribI3uiv
#define glVertexAttribI4bv greg_glVertexAttribI4bv
#define glVertexAttribI4i greg_glVertexAttribI4i
#define glVertexAttribI4iv greg_glVertexAttribI4iv
#define glVertexAttribI4sv greg_glVertexAttribI4sv
#define glVertexAttribI4ubv greg_glVertexAttribI4ubv
#define glVertexAttribI4ui greg_glVertexAttribI4ui
#define glVertexAttribI4uiv greg_glVertexAttribI4uiv
#define glVertexAttribI4usv greg_glVertexAttribI4usv
#define glVertexAttribIPointer greg_glVertexAttribIPointer
#define glVertexAttribPointer greg_glVertexAttribPointer
#define glVertexPointer greg_glVertexPointer
#define glViewport greg_glViewport
#define glWaitSync greg_glWaitSync
#define glWindowPos2d greg_glWindowPos2d
#define glWindowPos2dv greg_glWindowPos2dv
#define glWindowPos2f greg_glWindowPos2f
#define glWindowPos2fv greg_glWindowPos2fv
#define glWindowPos2i greg_glWindowPos2i
#define glWindowPos2iv greg_glWindowPos2iv
#define glWindowPos2s greg_glWindowPos2s
#define glWindowPos2sv greg_glWindowPos2sv
#define glWindowPos3d greg_glWindowPos3d
#define glWindowPos3dv greg_glWindowPos3dv
#define glWindowPos3f greg_glWindowPos3f
#define glWindowPos3fv greg_glWindowPos3fv
#define glWindowPos3i greg_glWindowPos3i
#define glWindowPos3iv greg_glWindowPos3iv
#define glWindowPos3s greg_glWindowPos3s
#define glWindowPos3sv greg_glWindowPos3sv


/*! @brief Initializes the library.
 *  @return `GL_TRUE` if successful, or `GL_FALSE` if an error occurred.
 */
extern int gregInit(void);

#ifdef __cplusplus
}
#endif

#endif /* _greg_h_ */
